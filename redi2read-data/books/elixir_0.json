[{"pageCount":128,"thumbnail":"http:\/\/books.google.com\/books\/content?id=IA9QDwAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api","price":14.99,"subtitle":"Write Less Code, Get More Done (and Have Fun!)","description":"Write code that writes code with Elixir macros. Macros make metaprogramming possible and define the language itself. In this book, you'll learn how to use macros to extend the language with fast, maintainable code and share functionality in ways you never thought possible. You'll discover how to extend Elixir with your own first-class features, optimize performance, and create domain-specific languages. Metaprogramming is one of Elixir's greatest features. Maybe you've played with the basics or written a few macros. Now you want to take it to the next level. This book is a guided series of metaprogramming tutorials that take you step by step to metaprogramming mastery. You'll extend Elixir with powerful features and write faster, more maintainable programs in ways unmatched by other languages. You'll start with the basics of Elixir's metaprogramming system and find out how macros interact with Elixir's abstract format. Then you'll extend Elixir with your own first-class features, write a testing framework, and discover how Elixir treats source code as building blocks, rather than rote lines of instructions. You'll continue your journey by using advanced code generation to create essential libraries in strikingly few lines of code. Finally, you'll create domain-specific languages and learn when and where to apply your skills effectively. When you're done, you will have mastered metaprogramming, gained insights into Elixir's internals, and have the confidence to leverage macros to their full potential in your own projects.","language":"en","currency":"USD","id":"1680503987","title":"Metaprogramming Elixir","infoLink":"https:\/\/play.google.com\/store\/books\/details?id=IA9QDwAAQBAJ&source=gbs_api","authors":["Chris McCord"]},{"pageCount":412,"thumbnail":"http:\/\/books.google.com\/books\/content?id=ttJfDwAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api","price":40.99,"subtitle":"Functional |> Concurrent |> Pragmatic |> Fun","description":"This book is the introduction to Elixir for experienced programmers, completely updated for Elixir 1.6 and beyond. Explore functional programming without the academic overtones (tell me about monads just one more time). Create concurrent applications, butget them right without all the locking and consistency headaches. Meet Elixir, a modern, functional, concurrent language built on the rock-solid Erlang VM. Elixir's pragmatic syntax and built-in support for metaprogramming will make you productive and keep you interestedfor the long haul. Maybe the time is right for the Next Big Thing. Maybe it's Elixir. Functional programming techniques help you manage the complexities of today's real-world, concurrent systems; maximize uptime; and manage security. Enter Elixir, with its modern, Ruby-like, extendable syntax, compile and runtime evaluation, hygienic macro system, and more. But, just as importantly, Elixir brings a sense of enjoyment to parallel,functional programming. Your applications become fun to work with, and the language encourages you to experiment. Part 1 covers the basics of writing sequential Elixir programs. We'll look at the language, the tools, and the conventions. Part 2 uses these skills to start writing concurrent code-applications that use all the cores on your machine, or all the machines on your network! And we do it both with and without OTP. Part 3 looks at the more advanced features of the language, from DSLs and code generation to extending the syntax. This edition is fully updated with all the new features of Elixir 1.6, with a new chapter on structuring OTP applications, and new sections on the debugger, code formatter, Distillery, and protocols. What You Need: You'll need a computer, a little experience with another high-levellanguage, and a sense of adventure. No functional programmingexperience is needed.","language":"en","currency":"USD","id":"1680506137","title":"Programming Elixir â‰¥ 1.6","infoLink":"https:\/\/play.google.com\/store\/books\/details?id=ttJfDwAAQBAJ&source=gbs_api","authors":["Dave Thomas"]},{"pageCount":244,"thumbnail":"http:\/\/books.google.com\/books\/content?id=F_tUDwAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api","price":36.99,"subtitle":"From Concept to Production","description":"Adoption is more than programming. Elixir is an exciting new language, but to successfully get your application from start to finish, you're going to need to know more than just the language. The case studies and strategies in this book will get you there. Learn the best practices for the whole life of your application, from design and team-building, to managing stakeholders, to deployment and monitoring. Go beyond the syntax and the tools to learn the techniques you need to develop your Elixir application from concept to production. Learn real-life strategies from the people who built Elixir and use it successfully at scale. See how Ben Marx and Bleacher Report maintain one of the highest-traffic Elixir applications by selling the concept to management and delivering on that promise. Find out how Bruce Tate and icanmakeitbetter hire and train Elixir engineers, and the techniques they've employed to design and ensure code consistency since Elixir's early days. Explore customer challenges in deploying and monitoring distributed applications with Elixir creator Jose Valim and Plataformatec. Make a business case and build a team before you finish your first prototype. Once you're in development, form strategies for organizing your code and learning the constraints of the runtime and ecosystem. Convince stakeholders, both business and technical, about the value they can expect. Prepare to make the critical early decisions that will shape your application for years to come. Manage your deployment with all of the knobs and gauges that good DevOps teams demand. Decide between the many options available for deployment, and how to best prepare yourself for the challenges of running a production application. This book picks up where most Elixir books leave off. It won't teach you to program Elixir, or any of its tools. Instead, it guides you through the broader landscape and shows you a holistic approach to adopting the language. What You Need: This book works with any version of Elixir.","language":"en","currency":"USD","id":"168050584X","title":"Adopting Elixir","infoLink":"https:\/\/play.google.com\/store\/books\/details?id=F_tUDwAAQBAJ&source=gbs_api","authors":["Ben Marx","Jose Valim","Bruce Tate"]},{"pageCount":212,"thumbnail":"http:\/\/books.google.com\/books\/content?id=4tNLDgAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api","price":18.35,"subtitle":"Getting Started in Functional Programming","description":"If you\u2019re new to Erlang, its functional style can seem difficult, but with help from this hands-on introduction, you\u2019ll scale the learning curve and discover how enjoyable, powerful, and fun this language can be. In this updated second edition, author Simon St.Laurent shows you how to write simple Erlang programs by teaching you one skill at a time. You\u2019ll learn about pattern matching, recursion, message passing, process-oriented programming, and establishing pathways for data rather than telling it where to go. By the end of your journey, you\u2019ll understand why Erlang is ideal for concurrency and resilience. Get cozy with Erlang\u2019s shell, its command line interface Define functions, using the fun tool, to represent repeated calculations Discover atoms, pattern matching, and guards: the foundations of your program structure Delve into the heart of Erlang processing with recursion, strings, lists, and higher-order functions Create processes, send messages among them, and apply pattern matching to incoming messages Store and manipulate structured data with Erlang Term Storage and the Mnesia database Learn about Open Telecom Platform, Erlang\u2019s open source libraries and tools","language":"en","currency":"USD","id":"1491973323","title":"Introducing Erlang","infoLink":"https:\/\/play.google.com\/store\/books\/details?id=4tNLDgAAQBAJ&source=gbs_api","authors":["Simon St. Laurent"]},{"pageCount":220,"thumbnail":"http:\/\/books.google.com\/books\/content?id=pg9QDwAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api","price":39.99,"subtitle":"Rethink the Modern Web App","description":"Elixir and Phoenix are generating tremendous excitement as an unbeatable platform for building modern web applications. For decades OTP has helped developers create incredibly robust, scalable applications with unparalleled uptime. Make the most of them as you build a stateful web app with Elixir, OTP, and Phoenix. Model domain entities without an ORM or a database. Manage server state and keep your code clean with OTP Behaviours. Layer on a Phoenix web interface without coupling it to the business logic. Open doors to powerful new techniques that will get you thinking about web development in fundamentally new ways. Elixir and OTP provide exceptional tools to build rock-solid back-end applications that scale. In this book, you'll build a web application in a radically different way, with a back end that holds application state. You'll use persistent Phoenix Channel connections instead of HTTP's request-response, and create the full application in distinct, decoupled layers. In Part 1, start by building the business logic as a separate application, without Phoenix. Model the application domain with Elixir functions and simple data structures. By keeping state in memory instead of a database, you can reduce latency and simplify your code. In Part 2, add in the GenServer Behaviour to make managing in-memory state a breeze. Create a supervision tree to boost fault tolerance while separating error handling from business logic. Phoenix is a modern web framework you can layer on top of business logic while keeping the two completely decoupled. In Part 3, you'll do exactly that as you build a web interface with Phoenix. Bring in the application from Part 2 as a dependency to a new Phoenix project. Then use ultra-scalable Phoenix Channels to establish persistent connections between the stateful server and a stateful front-end client. You're going to love this way of building web apps! What You Need: You'll need a computer that can run Elixir version 1.5 or higher and Phoenix 1.3 or higher. Some familiarity with Elixir and Phoenix is recommended.","language":"en","currency":"USD","id":"1680505440","title":"Functional Web Development with Elixir, OTP, and Phoenix","infoLink":"https:\/\/play.google.com\/store\/books\/details?id=pg9QDwAAQBAJ&source=gbs_api","authors":["Lance Halvorsen"]},{"pageCount":248,"thumbnail":"http:\/\/books.google.com\/books\/content?id=3lLGDQAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api","price":13.19,"subtitle":"Getting Started in Functional Programming","description":"Smooth, powerful, and small, Elixir is an excellent language for learning functional programming, and with this hands-on introduction, you\u2019ll discover just how powerful Elixir can be. Authors Simon St. Laurent and J. David Eisenberg show you how Elixir combines the robust functional programming of Erlang with an approach that looks more like Ruby, and includes powerful macro features for metaprogramming. Updated to cover Elixir 1.4, the second edition of this practical book helps you write simple Elixir programs by teaching one skill at a time. Once you pick up pattern matching, process-oriented programming, and other concepts, you\u2019ll understand why Elixir makes it easier to build concurrent and resilient programs that scale up and down with ease. Get comfortable with IEx, Elixir\u2019s command line interface Learn Elixir\u2019s basic structures by working with numbers Discover atoms, pattern matching, and guards: the foundations of your program structure Delve into the heart of Elixir processing with recursion, strings, lists, and higher-order functions Create Elixir processes and send messages among them Store and manipulate structured data with Erlang Term Storage and the Mnesia database Build resilient applications with the Open Telecom Platform","language":"en","currency":"USD","id":"1491956852","title":"Introducing Elixir","infoLink":"https:\/\/play.google.com\/store\/books\/details?id=3lLGDQAAQBAJ&source=gbs_api","authors":["Simon St. Laurent","J. David Eisenberg"]},{"pageCount":236,"thumbnail":"http:\/\/books.google.com\/books\/content?id=E7q9BgAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api","price":16.54,"subtitle":null,"description":"This book is intended for users with some knowledge of the Elixir language syntax and basic data types\/structures. Although this is a cookbook and no sequential reading is required, the book\u2019s structure will allow less advanced users who follow it to be gradually exposed to some of Elixir\u2019s features and concepts specific to functional programming. To get the most out of this book, you need to be well versed with Erlang.","language":"en","currency":"USD","id":"1784393487","title":"Elixir Cookbook","infoLink":"https:\/\/play.google.com\/store\/books\/details?id=E7q9BgAAQBAJ&source=gbs_api","authors":["Paulo A Pereira"]},{"pageCount":244,"thumbnail":"http:\/\/books.google.com\/books\/content?id=6LSXDwAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api","price":39.99,"subtitle":"Build Database Apps in Elixir for Scalability and Performance","description":"Languages may come and go, but the relational database endures. Learn how to use Ecto, the premier database library for Elixir, to connect your Elixir and Phoenix apps to databases. Get a firm handle on Ecto fundamentals with a module-by-module tour of the critical parts of Ecto. Then move on to more advanced topics and advice on best practices with a series of recipes that provide clear, step-by-step instructions on scenarios commonly encountered by app developers. Co-authored by the creator of Ecto, this title provides all the essentials you need to use Ecto effectively. Elixir and Phoenix are taking the application development world by storm, and Ecto, the database library that ships with Phoenix, is going right along with them. There are plenty of examples that show you the basics, but to use Ecto to its full potential, you need to learn the library from the ground up. This definitive guide starts with a tour of the core features of Ecto - repos, queries, schemas, changesets, transactions - gradually building your knowledge with tasks of ever-increasing complexity. Along the way, you'll be learning by doing - a sample application handles all the boilerplate so you can focus on getting Ecto into your fingers. Build on that core knowledge with a series of recipes featuring more advanced topics. Change your pooling strategy to maximize your database's efficiency. Use nested associations to handle complex table relationships. Add streams to handle large result sets with ease. Based on questions from Ecto users, these recipes cover the most common situations developers run into. Whether you're new to Ecto, or already have an app in production, this title will give you a deeper understanding of how Ecto works, and help make your database code cleaner and more efficient. What You Need: To follow along with the book, you should have Erlang\/OTP 19+ and Elixir 1.4+ installed. The book will guide you through setting up a sample application that integrates Ecto.","language":"en","currency":"USD","id":"1680506935","title":"Programming Ecto","infoLink":"https:\/\/play.google.com\/store\/books\/details?id=6LSXDwAAQBAJ&source=gbs_api","authors":["Darin Wilson","Eric Meadows-Jonsson"]},{"pageCount":304,"thumbnail":"http:\/\/books.google.com\/books\/content?id=IitZDwAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api","price":40.99,"subtitle":"Flexible, Robust Services for Queries, Mutations, and Subscriptions","description":"Your domain is rich and interconnected, and your API should be too. Upgrade your web API to GraphQL, leveraging its flexible queries to empower your users, and its declarative structure to simplify your code. Absinthe is the GraphQL toolkit for Elixir, a functional programming language designed to enable massive concurrency atop robust application architectures. Written by the creators of Absinthe, this book will help you take full advantage of these two groundbreaking technologies. Build your own flexible, high-performance APIs using step-by-step guidance and expert advice you won't find anywhere else. GraphQL is a new way of structuring and building web services, and the result is transformational. Find out how to offer a more tailored, cohesive experience to your users, easily aggregate data from different data sources, and improve your back end's maintainability with Absinthe's declarative approach to defining how your API works. Build a GraphQL-based API from scratch using Absinthe, starting from core principles. Learn the type system and how to expand your schema to suit your application's needs. Discover a growing ecosystem of tools and utilities to understand, debug, and document your API. Take it to production, but do it safely with solid best practices in mind. Find out how complexity analysis and persisted queries can let you support your users flexibly, but responsibly too. Along the way, discover how Elixir makes all the difference for a high performance, fault-tolerant API. Use asynchronous and batching execution, or write your own custom add-ons to extend Absinthe. Go live with subscriptions, delivering data over websockets on top of Elixir (and Erlang\/OTP's) famous solid performance and real-time capabilities. Transform your applications with the powerful combination of Elixir and GraphQL, using Absinthe. What You Need: To follow along with the book, you should have Erlang\/OTP 19+ and Elixir 1.4+ installed. The book will guide you through setting up a new Phoenix application using Absinthe.","language":"en","currency":"USD","id":"1680505939","title":"Craft GraphQL APIs in Elixir with Absinthe","infoLink":"https:\/\/play.google.com\/store\/books\/details?id=IitZDwAAQBAJ&source=gbs_api","authors":["Bruce Williams","Ben Wilson"]},{"pageCount":328,"thumbnail":"http:\/\/books.google.com\/books\/content?id=LvbkDwAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api","price":39.99,"subtitle":"Build Highly Scalable Systems with Channels","description":"Give users the real-time experience they expect, by using Elixir and Phoenix Channels to build applications that instantly react to changes and reflect the application's true state. Learn how Elixir and Phoenix make it easy and enjoyable to create real-time applications that scale to a large number of users. Apply system design and development best practices to create applications that are easy to maintain. Gain confidence by learning how to break your applications before your users do. Deploy applications with minimized resource use and maximized performance. Real-time applications come with real challenges - persistent connections, multi-server deployment, and strict performance requirements are just a few. Don't try to solve these challenges by yourself - use a framework that handles them for you. Elixir and Phoenix Channels provide a solid foundation on which to build stable and scalable real-time applications. Build applications that thrive for years to come with the best-practices found in this book. Understand the magic of real-time communication by inspecting the WebSocket protocol in action. Avoid performance pitfalls early in the development lifecycle with a catalog of common problems and their solutions. Leverage GenStage to build a data pipeline that improves scalability. Break your application before your users do and confidently deploy them. Build a real-world project using solid application design and testing practices that help make future changes a breeze. Create distributed apps that can scale to many users with tools like Phoenix Tracker. Deploy and monitor your application with confidence and reduce outages. Deliver an exceptional real-time experience to your users, with easy maintenance, reduced operational costs, and maximized performance, using Elixir and Phoenix Channels. What You Need: You'll need Elixir 1.9+ and Erlang\/OTP 22+ installed on a Mac OS X, Linux, or Windows machine.","language":"en","currency":"USD","id":"1680507753","title":"Real-Time Phoenix","infoLink":"https:\/\/play.google.com\/store\/books\/details?id=LvbkDwAAQBAJ&source=gbs_api","authors":["Stephen Bussey"]},{"pageCount":574,"thumbnail":"http:\/\/books.google.com\/books\/content?id=WO1mDwAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api","price":22.39,"subtitle":"Build and scale concurrent, distributed, and fault-tolerant applications","description":"Leverage the power of Elixir programming language to solve practical problems associated with scalability, concurrency, fault tolerance, and high availability. Key Features Enhance your Elixir programming skills using its powerful tools and abstractions Discover how to develop a full-fledged file server Understand how to use Phoenix to create a web interface for your application. Book Description Running concurrent, fault-tolerant applications that scale is a very demanding responsibility. After learning the abstractions that Elixir gives us, developers are able to build such applications with inconceivable low effort. There is a big gap between playing around with Elixir and running it in production, serving live requests. This book will help you fll this gap by going into detail on several aspects of how Elixir works and showing concrete examples of how to apply the concepts learned to a fully fledged application. In this book, you will learn how to build a rock-solid application, beginning by using Mix to create a new project. Then you will learn how the use of Erlang's OTP, along with the Elixir abstractions that run on top of it (such as GenServer and GenStage), that allow you to build applications that are easy to parallelize and distribute. You will also master supervisors (and supervision trees), and comprehend how they are the basis for building fault-tolerant applications. Then you will use Phoenix to create a web interface for your application. Upon fnishing implementation, you will learn how to take your application to the cloud, using Kubernetes to automatically deploy, scale, and manage it. Last, but not least, you will keep your peace of mind by learning how to thoroughly test and then monitor your application. What you will learn Use Elixir tools, including IEx and Mix Find out how an Elixir project is structured and how to create umbrella applications Discover the power of supervision trees, the basis for fault-tolerance Create a Domain-Specifc Language (DSL) that abstracts complexity Create a blazing-fast web interface for your application with Phoenix Set up an automatic deployment process for the cloud Monitor your application and be warned if anything unexpected happens Who this book is for Mastering Elixir is for you if you have experience in Elixir programming and want to take it to the next level. This Elixir book shows you how to build, deploy, and maintain robust applications, allowing you to go from tinkering with Elixir on side projects to using it in a live environment. However, no prior knowledge of Elixir is required to enjoy the complex topics covered in the book.","language":"en","currency":"USD","id":"1788472241","title":"Mastering Elixir","infoLink":"https:\/\/play.google.com\/store\/books\/details?id=WO1mDwAAQBAJ&source=gbs_api","authors":["AndrÃ© Albuquerque","Daniel Caixinha"]},{"pageCount":376,"thumbnail":"http:\/\/books.google.com\/books\/content?id=IM-GDwAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api","price":39.99,"subtitle":"Find Bugs Before Your Users Do","description":"Property-based testing helps you create better, more solid tests with little code. By using the PropEr framework in both Erlang and Elixir, this book teaches you how to automatically generate test cases, test stateful programs, and change how you design your software for more principled and reliable approaches. You will be able to better explore the problem space, validate the assumptions you make when coming up with program behavior, and expose unexpected weaknesses in your design. PropEr will even show you how to reproduce the bugs it found. With this book, you will be writing efficient property-based tests in no time. Most tests only demonstrate that the code behaves how the developer expected it to behave, and therefore carry the same blind spots as their authors when special conditions or edge cases show up. Learn how to see things differently with property tests written in PropEr. Start with the basics of property tests, such as writing stateless properties, and using the default generators to generate test cases automatically. More importantly, learn how to think in properties. Improve your properties, write custom data generators, and discover what your code can or cannot do. Learn when to use property tests and when to stick with example tests with real-world sample projects. Explore various testing approaches to find the one that's best for your code. Shrink failing test cases to their simpler expression to highlight exactly what breaks in your code, and generate highly relevant data through targeted properties. Uncover the trickiest bugs you can think of with nearly no code at all with two special types of properties based on state transitions and finite state machines. Write Erlang and Elixir properties that generate the most effective tests you'll see, whether they are unit tests or complex integration and system tests. What You Need Basic knowledge of Erlang, optionally Elixir For Erlang tests: Erlang\/OTP >= 20.0, with Rebar >= 3.4.0 For Elixir tests: Erlang\/OTP >= 20.0, Elixir >= 1.5.0","language":"en","currency":"USD","id":"1680506544","title":"Property-Based Testing with PropEr, Erlang, and Elixir","infoLink":"https:\/\/play.google.com\/store\/books\/details?id=IM-GDwAAQBAJ&source=gbs_api","authors":["Fred Hebert"]},{"pageCount":194,"thumbnail":"http:\/\/books.google.com\/books\/content?id=DA9QDwAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api","price":21.99,"subtitle":null,"description":"Printed in full color. For this new edition of the best-selling Learn to Program, Chris Pine has taken a good thing and made it even better. First, he used the feedback from hundreds of reader e-mails to update the content and make it even clearer. Second, he updated the examples in the book to use the latest stable version of Ruby, and also to use code that looks more like real-world Ruby code, so that people who have just learned to program will be more familiar with common Ruby techniques. Not only does the Second Edition now include answers to all of the exercises, it includes them twice. First you'll find the \"how you could do it\" answers, using the techniques you've learned up to that point in the book. Next you'll see \"how Chris Pine would do it\": answers using more advanced Ruby techniques, to whet your appetite as well as providing sort of a \"Rosetta Stone\" for more elegant solutions. Computers are everywhere, on every desk, in your iPod, cell phone, and PDA. To live well in the 21st century, you need to know how to make computers do things. And to really make computers do what you want, you have to learn to program. Fortunately, that's easier now than ever before. Chris Pine's book will teach you how to program. You'll learn to use your computer better, to get it to do what you want it to do. Starting with small, simple one-line programs to calculate your age in seconds, you'll see how to advance to fully structured, real programs. You'll learn the same technology used to drive modern dynamic websites and large, professional applications. It's now easier to learn to write your own computer software than it has ever been before. Now everyone can learn to write programs for themselves---no previous experience is necessary. Chris takes a thorough, but light-hearted approach that teaches you how to program with a minimum of fuss or bother. Printed in full color.","language":"en","currency":"USD","id":"1680503804","title":"Learn to Program","infoLink":"https:\/\/play.google.com\/store\/books\/details?id=DA9QDwAAQBAJ&source=gbs_api","authors":["Chris Pine"]},{"pageCount":256,"thumbnail":"http:\/\/books.google.com\/books\/content?id=_SigDQAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api","price":31.19,"subtitle":null,"description":"Learn and understand Erlang and Elixir and develop a working knowledge of the concepts of functional programming that underpin them. This book takes the author\u2019s experience of taking on a project that required functional programming and real-time systems, breaks it down, and organizes it. You will get the necessary knowledge about differences to the languages you know, where to start, and where to go next. Have you been told by your customer or manager that they heard good things about Erlang, you should use it for the next project? Never had to deal with functional programming or real-time systems? In 2014, the author, Wolfgang Loder, developed a repository for digital assets that had to deliver those assets in binary form quickly and reliably, being able to deal with at least hundreds of requests per second. Since he could decide the architecture and software stack of the solution, he immediately thought of Erlang and its libraries and started to evaluate this option. It was not long after that he discovered Elixir, which sits on top of the Erlang virtual machine and has features more palatable for non-functional programmers, although it is a functional programming language itself. Erlang and Elixir for Imperative Programmers gives you a basis for deciding whether the effort is viable for your next project. This book is partly a tale of the author's own experience and partly a description of the bigger and more subtle differences between Erlang\/Elixir and languages such as C++, Java, and C#. What You'll Learn Discover functional programming, Erlang, and Elixir Work on service design and service features Set up your environment: deployment, development, and production Implement the service including public interface, asset processing, and deployment Use the patterns and concepts found in Erlang including type creation concepts and code structuring. Who This Book Is For Experienced and savvy programmers, coders, and developers new to Erlang and Elixir.","language":"en","currency":"USD","id":"1484223942","title":"Erlang and Elixir for Imperative Programmers","infoLink":"https:\/\/play.google.com\/store\/books\/details?id=_SigDQAAQBAJ&source=gbs_api","authors":["Wolfgang Loder"]},{"pageCount":624,"thumbnail":"http:\/\/books.google.com\/books\/content?id=WgYvDwAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api","price":29.99,"subtitle":"A Beginner's Guide","description":"Erlang is the language of choice for programmers who want to write robust, concurrent applications, but its strange syntax and functional design can intimidate the uninitiated. Luckily, there\u2019s a new weapon in the battle against Erlang-phobia: Learn You Some Erlang for Great Good! Erlang maestro Fred HÃ©bert starts slow and eases you into the basics: You\u2019ll learn about Erlang\u2019s unorthodox syntax, its data structures, its type system (or lack thereof!), and basic functional programming techniques. Once you\u2019ve wrapped your head around the simple stuff, you\u2019ll tackle the real meat-and-potatoes of the language: concurrency, distributed computing, hot code loading, and all the other dark magic that makes Erlang such a hot topic among today\u2019s savvy developers. As you dive into Erlang\u2019s functional fantasy world, you\u2019ll learn about: \u2013Testing your applications with EUnit and Common Test \u2013Building and releasing your applications with the OTP framework \u2013Passing messages, raising errors, and starting\/stopping processes over many nodes \u2013Storing and retrieving data using Mnesia and ETS \u2013Network programming with TCP, UDP, and the inet module \u2013The simple joys and potential pitfalls of writing distributed, concurrent applications Packed with lighthearted illustrations and just the right mix of offbeat and practical example programs, Learn You Some Erlang for Great Good! is the perfect entry point into the sometimes-crazy, always-thrilling world of Erlang.","language":"en","currency":"USD","id":"1593275048","title":"Learn You Some Erlang for Great Good!","infoLink":"https:\/\/play.google.com\/store\/books\/details?id=WgYvDwAAQBAJ&source=gbs_api","authors":["Fred Hebert"]},{"pageCount":352,"thumbnail":"http:\/\/books.google.com\/books\/content?id=5wBQEp6ruIAC&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api","price":26.99,"subtitle":"From Journeyman to Master","description":"What others in the trenches say about The Pragmatic Programmer... \u201CThe cool thing about this book is that it\u2019s great for keeping the programming process fresh. The book helps you to continue to grow and clearly comes from people who have been there.\u201D \u2014Kent Beck, author of Extreme Programming Explained: Embrace Change \u201CI found this book to be a great mix of solid advice and wonderful analogies!\u201D \u2014Martin Fowler, author of Refactoring and UML Distilled \u201CI would buy a copy, read it twice, then tell all my colleagues to run out and grab a copy. This is a book I would never loan because I would worry about it being lost.\u201D \u2014Kevin Ruland, Management Science, MSG-Logistics \u201CThe wisdom and practical experience of the authors is obvious. The topics presented are relevant and useful.... By far its greatest strength for me has been the outstanding analogies\u2014tracer bullets, broken windows, and the fabulous helicopter-based explanation of the need for orthogonality, especially in a crisis situation. I have little doubt that this book will eventually become an excellent source of useful information for journeymen programmers and expert mentors alike.\u201D \u2014John Lakos, author of Large-Scale C++ Software Design \u201CThis is the sort of book I will buy a dozen copies of when it comes out so I can give it to my clients.\u201D \u2014Eric Vought, Software Engineer \u201CMost modern books on software development fail to cover the basics of what makes a great software developer, instead spending their time on syntax or technology where in reality the greatest leverage possible for any software team is in having talented developers who really know their craft well. An excellent book.\u201D \u2014Pete McBreen, Independent Consultant \u201CSince reading this book, I have implemented many of the practical suggestions and tips it contains. Across the board, they have saved my company time and money while helping me get my job done quicker! This should be a desktop reference for everyone who works with code for a living.\u201D \u2014Jared Richardson, Senior Software Developer, iRenaissance, Inc. \u201CI would like to see this issued to every new employee at my company....\u201D \u2014Chris Cleeland, Senior Software Engineer, Object Computing, Inc. \u201CIf I\u2019m putting together a project, it\u2019s the authors of this book that I want. . . . And failing that I\u2019d settle for people who\u2019ve read their book.\u201D \u2014Ward Cunningham Straight from the programming trenches, The Pragmatic Programmer cuts through the increasing specialization and technicalities of modern software development to examine the core process--taking a requirement and producing working, maintainable code that delights its users. It covers topics ranging from personal responsibility and career development to architectural techniques for keeping your code flexible and easy to adapt and reuse. Read this book, and you'll learn how to Fight software rot; Avoid the trap of duplicating knowledge; Write flexible, dynamic, and adaptable code; Avoid programming by coincidence; Bullet-proof your code with contracts, assertions, and exceptions; Capture real requirements; Test ruthlessly and effectively; Delight your users; Build teams of pragmatic programmers; and Make your developments more precise with automation. Written as a series of self-contained sections and filled with entertaining anecdotes, thoughtful examples, and interesting analogies, The Pragmatic Programmer illustrates the best practices and major pitfalls of many different aspects of software development. Whether you're a new coder, an experienced programmer, or a manager responsible for software projects, use these lessons daily, and you'll quickly see improvements in personal productivity, accuracy, and job satisfaction. You'll learn skills and develop habits and attitudes that form the foundation for long-term success in your career. You'll become a Pragmatic Programmer.","language":"en","currency":"USD","id":"013211917X","title":"The Pragmatic Programmer","infoLink":"https:\/\/play.google.com\/store\/books\/details?id=5wBQEp6ruIAC&source=gbs_api","authors":["Andrew Hunt","David Thomas"]},{"pageCount":286,"thumbnail":"http:\/\/books.google.com\/books\/content?id=ogUcDAAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api","price":17.19,"subtitle":null,"description":"Unveil many hidden gems of programming functionally by taking the foundational steps with Elixir About This Book Explore the functional paradigms of programming with Elixir through use of helpful examples Concise step-by-step instructions to teach you difficult technical concepts Bridge the gap between functional programming and Elixir Who This Book Is For This book targets developers new to Elixir, as well as Erlang, in order to make them feel comfortable in functional programming with Elixir, thus enabling them to develop more scalable and fault-tolerant applications. Although no knowledge of Elixir is assumed, some programming experience with mainstream Object-Oriented programming languages such a Ruby, Python, Java, C# would be beneficial. What You Will Learn Explore Elixir to create resilient, scalable applications Create fault-tolerant applications Become better acquainted with Elixir code and see how it is structured to build and develop functional programs Learn the basics of functional programming Gain an understanding of effective OTP principles Design program-distributed applications and systems Write and create branching statements in Elixir Learn to do more with less using Elixir's metaprogramming Be familiar with the facilities Elixir provides for metaprogramming, macros, and extending the Elixir language In Detail Elixir, based on Erlang's virtual machine and ecosystem, makes it easier to achieve scalability, concurrency, fault tolerance, and high availability goals that are pursued by developers using any programming language or programming paradigm. Elixir is a modern programming language that utilizes the benefits offered by Erlang VM without really incorporating the complex syntaxes of Erlang. Learning to program using Elixir will teach many things that are very beneficial to programming as a craft, even if at the end of the day, the programmer isn't using Elixir. This book will teach you concepts and principles important to any complex, scalable, and resilient application. Mostly, applications are historically difficult to reason about, but using the concepts in this book, they will become easy and enjoyable. It will teach you the functional programing ropes, to enable them to create better and more scalable applications, and you will explore how Elixir can help you achieve new programming heights. You will also glean a firm understanding of basics of OTP and the available generic, provided functionality for creating resilient complex systems. Furthermore, you will learn the basics of metaprogramming: modifying and extending Elixir to suite your needs. Style and approach An exploration of functional programming and Elixir with easy to follow examples using Elixir and the functional style. All the topics, concepts, and principles covered are clearly and concisely explained with either code examples or in depth discussions, or both!","language":"en","currency":"USD","id":"178588347X","title":"Learning Elixir","infoLink":"https:\/\/play.google.com\/store\/books\/details?id=ogUcDAAAQBAJ&source=gbs_api","authors":["Kenny Ballou"]},{"pageCount":498,"thumbnail":"http:\/\/books.google.com\/books\/content?id=Qr_WuvfTSpEC&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api","price":31.19,"subtitle":"A Concurrent Approach to Software Development","description":"This book is an in-depth introduction to Erlang, a programming language ideal for any situation where concurrency, fault tolerance, and fast response is essential. Erlang is gaining widespread adoption with the advent of multi-core processors and their new scalable approach to concurrency. With this guide you'll learn how to write complex concurrent programs in Erlang, regardless of your programming background or experience. Written by leaders of the international Erlang community -- and based on their training material -- Erlang Programming focuses on the language's syntax and semantics, and explains pattern matching, proper lists, recursion, debugging, networking, and concurrency. This book helps you: Understand the strengths of Erlang and why its designers included specific features Learn the concepts behind concurrency and Erlang's way of handling it Write efficient Erlang programs while keeping code neat and readable Discover how Erlang fills the requirements for distributed systems Add simple graphical user interfaces with little effort Learn Erlang's tracing mechanisms for debugging concurrent and distributed systems Use the built-in Mnesia database and other table storage features Erlang Programming provides exercises at the end of each chapter and simple examples throughout the book.","language":"en","currency":"USD","id":"0596555857","title":"Erlang Programming","infoLink":"https:\/\/play.google.com\/store\/books\/details?id=Qr_WuvfTSpEC&source=gbs_api","authors":["Francesco Cesarini","Simon Thompson"]},{"pageCount":482,"thumbnail":"http:\/\/books.google.com\/books\/content?id=uXosDAAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api","price":31.81,"subtitle":"Implement Robust, Fault-Tolerant Systems","description":"If you need to build a scalable, fault tolerant system with requirements for high availability, discover why the Erlang\/OTP platform stands out for the breadth, depth, and consistency of its features. This hands-on guide demonstrates how to use the Erlang programming language and its OTP framework of reusable libraries, tools, and design principles to develop complex commercial-grade systems that simply cannot fail. In the first part of the book, you\u2019ll learn how to design and implement process behaviors and supervision trees with Erlang\/OTP, and bundle them into standalone nodes. The second part addresses reliability, scalability, and high availability in your overall system design. If you\u2019re familiar with Erlang, this book will help you understand the design choices and trade-offs necessary to keep your system running. Explore OTP\u2019s building blocks: the Erlang language, tools and libraries collection, and its abstract principles and design rules Dive into the fundamentals of OTP reusable frameworks: the Erlang process structures OTP uses for behaviors Understand how OTP behaviors support client-server structures, finite state machine patterns, event handling, and runtime\/code integration Write your own behaviors and special processes Use OTP\u2019s tools, techniques, and architectures to handle deployment, monitoring, and operations","language":"en","currency":"USD","id":"1449361560","title":"Designing for Scalability with Erlang\/OTP","infoLink":"https:\/\/play.google.com\/store\/books\/details?id=uXosDAAAQBAJ&source=gbs_api","authors":["Francesco Cesarini","Steve Vinoski"]},{"pageCount":548,"thumbnail":"http:\/\/books.google.com\/books\/content?id=Pg9QDwAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api","price":35.99,"subtitle":"Software for a Concurrent World","description":"A multi-user game, web site, cloud application, or networked database can have thousands of users all interacting at the same time. You need a powerful, industrial-strength tool to handle the really hard problems inherent in parallel, concurrent environments. You need Erlang. In this second edition of the bestselling Programming Erlang, you'll learn how to write parallel programs that scale effortlessly on multicore systems. Using Erlang, you'll be surprised at how easy it becomes to deal with parallel problems, and how much faster and more efficiently your programs run. That's because Erlang uses sets of parallel processes-not a single sequential process, as found in most programming languages. Joe Armstrong, creator of Erlang, introduces this powerful language in small steps, giving you a complete overview of Erlang and how to use it in common scenarios. You'll start with sequential programming, move to parallel programming and handling errors in parallel programs, and learn to work confidently with distributed programming and the standard Erlang\/Open Telecom Platform (OTP) frameworks. You need no previous knowledge of functional or parallel programming. The chapters are packed with hands-on, real-world tutorial examples and insider tips and advice, and finish with exercises for both beginning and advanced users. The second edition has been extensively rewritten. New to this edition are seven chapters covering the latest Erlang features: maps, the type system and the Dialyzer, WebSockets, programming idioms, and a new stand-alone execution environment. You'll write programs that dynamically detect and correct errors, and that can be upgraded without stopping the system. There's also coverage of rebar (the de facto Erlang build system), and information on how to share and use Erlang projects on github, illustrated with examples from cowboy and bitcask. Erlang will change your view of the world, and of how you program. What You Need The Erlang\/OTP system. Download it from erlang.org.","language":"en","currency":"USD","id":"1680504320","title":"Programming Erlang","infoLink":"https:\/\/play.google.com\/store\/books\/details?id=Pg9QDwAAQBAJ&source=gbs_api","authors":["Joe Armstrong"]},{"pageCount":572,"thumbnail":"http:\/\/books.google.com\/books\/content?id=GWbcDwAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api","price":55.99,"subtitle":"The Spirit of the Game","description":"Building a successful product usually involves teams of people, and many choose the Scrum approach to aid in creating products that deliver the highest possible value. Implementing Scrum gives teams a collection of powerful ideas they can assemble to fit their needs and meet their goals. The ninety-four patterns contained within are elaborated nuggets of insight into ScrumÃ¢\u20ACâ„¢s building blocks, how they work, and how to use them. They offer novices a roadmap for starting from scratch, yet they help intermediate practitioners fine-tune or fortify their Scrum implementations. Experienced practitioners can use the patterns and supporting explanations to get a better understanding of how the parts of Scrum complement each other to solve common problems in product development. The patterns are written in the well-known Alexandrian form, whose roots in architecture and design have enjoyed broad application in the software world. The form organizes each pattern so you can navigate directly to organizational design tradeoffs or jump to the solution or rationale that makes the solution work. The patterns flow together naturally through the context sections at their beginning and end. Learn everything you need to know to master and implement Scrum one step at a timeÃ¢\u20AC\u201Dthe agile way.","language":"en","currency":"USD","id":"1680507567","title":"A Scrum Book","infoLink":"https:\/\/play.google.com\/store\/books\/details?id=GWbcDwAAQBAJ&source=gbs_api","authors":["Jeff Sutherland","James O. Coplien"]},{"pageCount":406,"thumbnail":"http:\/\/books.google.com\/books\/content?id=hPBZDwAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api","price":19.79,"subtitle":"Create rich web applications using functional programming techniques with Phoenix and Elixir","description":"Learn to build a high-performance functional prototype of a voting web application from scratch using Elixir and Phoenix Key Features Build a strong foundation in Functional-Programming techniques while learning to build compelling web applications Understand the Elixir Concurrency and parallelization model to build high-performing blazingly fast applications Learn to test, debug and deploy your web applications using Phoenix framework Book Description Phoenix is a modern web development framework that is used to build API\u2019s and web applications. It is built on Elixir and runs on Erlang VM which makes it much faster than other options. With Elixir and Phoenix, you build your application the right way, ready to scale and ready for the increasing demands of real-time web applications. This book covers the basics of the Phoenix web framework, showing you how to build a community voting application, and is divided into three parts. In the first part, you will be introduced to Phoenix and Elixir and understand the core terminologies that are used to describe them. You will also learn to build controller pages, store and retrieve data, add users to your app pages and protect your database. In the second section you will be able to reinforce your knowledge of architecting real time applications in phoenix and not only debug these applications but also diagnose issues in them. In the third and final section you will have the complete understanding of deploying and running the phoenix application and should be comfortable to make your first application release By the end of this book, you'll have a strong grasp of all of the core fundamentals of the Phoenix framework, and will have built a full production-ready web application from scratch. What you will learn Learn Phoenix Framework fundamentals and v1.3's new application structure Build real-time applications with channels and presence Utilize GenServers and other OTP fundamentals to keep an application stable Track users as they sign in and out of chat with Phoenix\u2019s built-in presence functionality Write your own database interaction code that is safe, bug-free, and easy to work with Explore testing and debugging methodologies to understand a real software development lifecycle for a Phoenix application Deploy and run your Phoenix application in production Who this book is for This book is for people with a basic knowledge of Elixir, who want to start building web applications. Prior experience with web technologies is assumed.","language":"en","currency":"USD","id":"1787284778","title":"Phoenix Web Development","infoLink":"https:\/\/play.google.com\/store\/books\/details?id=hPBZDwAAQBAJ&source=gbs_api","authors":["Mike Voloz","Brandon Richey"]},{"pageCount":256,"thumbnail":"http:\/\/books.google.com\/books\/content?id=JxWhDQAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api","price":17.27,"subtitle":"Building Web Applications and Microservices for the Cloud with Go and React","description":"The Complete Guide to Building Cloud-Based Services Cloud Native Go shows developers how to build massive cloud applications that meet the insatiable demands of today\u2019s customers, and will dynamically scale to handle virtually any volume of data, traffic, or users. Kevin Hoffman and Dan Nemeth describe the modern cloud-native application in detail, illuminating factors, disciplines, and habits associated with rapid, reliable cloud-native development. They also introduce Go, a \u201Csimply elegant\u201D high-performance language that is especially well-suited for cloud development. You\u2019ll walk through creating microservices in Go, adding front-end web components using ReactJS and Flux, and mastering advanced Go-based cloud-native techniques. Hoffman and Nemeth show how to build a continuous delivery pipeline with tools like Wercker, Docker, and Dockerhub; automatically push apps to leading platforms; and systematically monitor app performance in production. Learn \u201CThe Way of the Cloud\u201D: why developing good cloud software is fundamentally about mindset and discipline Discover why Go is ideal for cloud-native microservices development Plan cloud apps that support continuous delivery and deployment Design service ecosystems, and then build them in a test-first manner Push work-in-progress to a cloud Use Event Sourcing and CQRS patterns to react and respond to enormous volume and throughput Secure cloud-based web applications: do\u2019s, don\u2019ts, and options Create reactive applications in the cloud with third-party messaging providers Build massive-scale, cloud-friendly GUIs with React and Flux Monitor dynamic scaling, failover, and fault tolerance in the cloud","language":"en","currency":"USD","id":"0134505808","title":"Cloud Native Go","infoLink":"https:\/\/play.google.com\/store\/books\/details?id=JxWhDQAAQBAJ&source=gbs_api","authors":["Kevin Hoffman","Dan Nemeth"]},{"pageCount":248,"thumbnail":"http:\/\/books.google.com\/books\/content?id=KX_QDwAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api","price":25.99,"subtitle":"Effective Planning in an Imperfect World","description":"Estimating software development often produces more angst than value, but it doesn't have to. Identify the needs behind estimate requests and determine how to meet those needs simply and easily. Choose estimation techniques based on current needs and available information, gaining benefit while reducing cost and effort. Detect bad assumptions that might sink your project if you don't adjust your plans. Discover what to do when an estimate is wrong, how to recover, and how to use that knowledge for future planning. Learn to communicate about estimates in a healthy and productive way, maximizing advantage to the organization and minimizing damage to the people. In a world where most developers hate estimation and most managers fear disappointment with the results, there is hope for both. It requires giving up some widely held misconceptions. Let go of the notion that \"an estimate is an estimate\" and estimate for the particular need you, and your organization, have. Realize that estimates have a limited shelf-life, and reestimate frequently if it's important. When reality differs from your estimate, don't lament; mine that disappointment for the gold that can be the longer-term jackpot. Estimate in comparison to past experience, by modeling the work mathematically, or a hybrid of both. Learn strategies for effective decomposition of work and aspects of the work that likely affect your estimates. Hedge your bets by comparing the results of different approaches. Find out what to do when an estimate proves wrong. And they will. They're estimates, after all. You'll discover that you can use estimates to warn you of danger so you can take appropriate action in time. Learn some crucial techniques to understand and communicate with those who need to understand. Address both the technical and sociological aspects of estimation, and you'll help your organization achieve its desired goals with less drama and more benefit. What You Need: No software needed, just your past experience and concern for the outcomes.","language":"en","currency":"USD","id":"1680507419","title":"Software Estimation Without Guessing","infoLink":"https:\/\/play.google.com\/store\/books\/details?id=KX_QDwAAQBAJ&source=gbs_api","authors":["George Dinwiddie"]},{"pageCount":316,"thumbnail":"http:\/\/books.google.com\/books\/content?id=cVlPDwAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api","price":31.19,"subtitle":"Developing Web Applications with Python","description":"Take full creative control of your web applications with Flask, the Python-based microframework. With the second edition of this hands-on book, you\u2019ll learn the framework from the ground up by developing, step-by-step, a real-world project created by author Miguel Grinberg. This refreshed edition accounts for important technology changes that have occurred in the past three years. You\u2019ll learn the framework\u2019s core functionality, as well as how to extend applications with advanced web techniques such as database migration and web service communication. The first part of each chapter provides you with reference and background for the topic in question, while the second part guides you though a hands-on implementation of the topic. If you have Python experience, this book shows you how to take advantage of the creative freedom Flask provides.","language":"en","currency":"USD","id":"1491991690","title":"Flask Web Development","infoLink":"https:\/\/play.google.com\/store\/books\/details?id=cVlPDwAAQBAJ&source=gbs_api","authors":["Miguel Grinberg"]},{"pageCount":null,"thumbnail":"http:\/\/books.google.com\/books\/content?id=LhOlDwAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api","price":30.39,"subtitle":"your journey to mastery, 20th Anniversary Edition","description":"\u201COne of the most significant books in my life.\u201D \u2013Obie Fernandez, Author, The Rails Way \u201CTwenty years ago, the first edition of The Pragmatic Programmer completely changed the trajectory of my career. This new edition could do the same for yours.\u201D \u2013Mike Cohn, Author of Succeeding with Agile, Agile Estimating and Planning, and User Stories Applied \u201C. . . filled with practical advice, both technical and professional, that will serve you and your projects well for years to come.\u201D \u2013Andrea Goulet, CEO, Corgibytes, Founder, LegacyCode.Rocks \u201C. . . lightning does strike twice, and this book is proof.\u201D \u2013VM (Vicky) Brasseur, Director of Open Source Strategy, Juniper Networks The Pragmatic Programmer is one of those rare tech books you\u2019ll read, re-read, and read again over the years. Whether you\u2019re new to the field or an experienced practitioner, you\u2019ll come away with fresh insights each and every time. Dave Thomas and Andy Hunt wrote the first edition of this influential book in 1999 to help their clients create better software and rediscover the joy of coding. These lessons have helped a generation of programmers examine the very essence of software development, independent of any particular language, framework, or methodology, and the Pragmatic philosophy has spawned hundreds of books, screencasts, and audio books, as well as thousands of careers and success stories. Now, twenty years later, this new edition re-examines what it means to be a modern programmer. Topics range from personal responsibility and career development to architectural techniques for keeping your code flexible and easy to adapt and reuse. Read this book, and you\u2019ll learn how to: Fight software rot Learn continuously Avoid the trap of duplicating knowledge Write flexible, dynamic, and adaptable code Harness the power of basic tools Avoid programming by coincidence Learn real requirements Solve the underlying problems of concurrent code Guard against security vulnerabilities Build teams of Pragmatic Programmers Take responsibility for your work and career Test ruthlessly and effectively, including property-based testing Implement the Pragmatic Starter Kit Delight your users Written as a series of self-contained sections and filled with classic and fresh anecdotes, thoughtful examples, and interesting analogies, The Pragmatic Programmer illustrates the best approaches and major pitfalls of many different aspects of software development. Whether you\u2019re a new coder, an experienced programmer, or a manager responsible for software projects, use these lessons daily, and you\u2019ll quickly see improvements in personal productivity, accuracy, and job satisfaction. You\u2019ll learn skills and develop habits and attitudes that form the foundation for long-term success in your career. You\u2019ll become a Pragmatic Programmer. Register your book for convenient access to downloads, updates, and\/or corrections as they become available. See inside book for details.","language":"en","currency":"USD","id":"0135956919","title":"The Pragmatic Programmer","infoLink":"https:\/\/play.google.com\/store\/books\/details?id=LhOlDwAAQBAJ&source=gbs_api","authors":["David Thomas","Andrew Hunt"]},{"pageCount":300,"thumbnail":"http:\/\/books.google.com\/books\/content?id=459MDwAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api","price":14.17,"subtitle":"The History of Our Future","description":"Network revolutions of the past have shaped the present and set the stage for the revolution we are experiencing today In an era of seemingly instant change, it's easy to think that today's revolutions\u2014in communications, business, and many areas of daily life\u2014are unprecedented. Today's changes may be new and may be happening faster than ever before. But our ancestors at times were just as bewildered by rapid upheavals in what we now call \u201Cnetworks\u201D\u2014the physical links that bind any society together. In this fascinating book, former FCC chairman Tom Wheeler brings to life the two great network revolutions of the past and uses them to help put in perspective the confusion, uncertainty, and even excitement most people face today. The first big network revolution was the invention of movable-type printing in the fifteenth century. This book, its millions of predecessors, and even such broad trends as the Reformation, the Renaissance, and the multiple scientific revolutions of the past 500 years would not have been possible without that one invention. The second revolution came with the invention of the telegraph early in the nineteenth century. Never before had people been able to communicate over long distances faster than a horse could travel. Along with the development of the world's first high-speed network\u2014the railroad\u2014the telegraph upended centuries of stability and literally redrew the map of the world. Wheeler puts these past revolutions into the perspective of today, when rapid-fire changes in networking are upending the nature of work, personal privacy, education, the media, and nearly every other aspect of modern life. But he doesn't leave it there. Outlining \u201CWhat's Next,\u201D he describes how artificial intelligence, virtual reality, blockchain, and the need for cybersecurity are laying the foundation for a third network revolution.","language":"en","currency":"USD","id":"0815735332","title":"From Gutenberg to Google","infoLink":"https:\/\/play.google.com\/store\/books\/details?id=459MDwAAQBAJ&source=gbs_api","authors":["Tom Wheeler"]},{"pageCount":568,"thumbnail":"http:\/\/books.google.com\/books\/content?id=y83aDwAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api","price":28.49,"subtitle":"Build powerful and reliable Python web applications from scratch, 3rd Edition","description":"Learn Django 3 with four end-to-end web projects Key Features Learn Django 3 by building real-world web applications from scratch in Python, using coding best practices Integrate other technologies into your application with clear, step-by-step explanations and comprehensive example code Implement advanced functionalities like a full-text search engine, a user activity stream, or a recommendation engine Add real-time features with Django Channels and WebSockets Book Description If you want to learn the entire process of developing professional web applications with Python and Django, then this book is for you. In the process of building four professional Django projects, you will learn about Django 3 features, how to solve common web development problems, how to implement best practices, and how to successfully deploy your applications. In this book, you will build a blog application, a social image bookmarking website, an online shop, and an e-learning platform. Step-by-step guidance will teach you how to integrate popular technologies, enhance your applications with AJAX, create RESTful APIs, and set up a production environment for your Django projects. By the end of this book, you will have mastered Django 3 by building advanced web applications. What you will learn Build real-world web applications Learn Django essentials, including models, views, ORM, templates, URLs, forms, and authentication Implement advanced features such as custom model fields, custom template tags, cache, middleware, localization, and more Create complex functionalities, such as AJAX interactions, social authentication, a full-text search engine, a payment system, a CMS, a RESTful API, and more Integrate other technologies, including Redis, Celery, RabbitMQ, PostgreSQL, and Channels, into your projects Deploy Django projects in production using NGINX, uWSGI, and Daphne Who this book is for This book is intended for developers with Python knowledge who wish to learn Django in a pragmatic way. Perhaps you are completely new to Django, or you already know a little but you want to get the most out of it. This book will help you to master the most relevant areas of the framework by building practical projects from scratch. You need to have familiarity with programming concepts in order to read this book. Some previous knowledge of HTML and JavaScript is assumed.","language":"en","currency":"USD","id":"1838989323","title":"Django 3 By Example","infoLink":"https:\/\/play.google.com\/store\/books\/details?id=y83aDwAAQBAJ&source=gbs_api","authors":["Antonio MelÃ©"]},{"pageCount":320,"thumbnail":"http:\/\/books.google.com\/books\/content?id=ZA9QDwAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api","price":32.99,"subtitle":"Languages That Are Shaping the Future","description":"Great programmers aren't born--they're made. The industry is moving from object-oriented languages to functional languages, and you need to commit to radical improvement. New programming languages arm you with the tools and idioms you need to refine your craft. While other language primers take you through basic installation and \"Hello, World,\" we aim higher. Each language in Seven More Languages in Seven Weeks will take you on a step-by-step journey through the most important paradigms of our time. You'll learn seven exciting languages: Lua, Factor, Elixir, Elm, Julia, MiniKanren, and Idris. Learn from the award-winning programming series that inspired the Elixir language. Hear how other programmers across broadly different communities solve problems important enough to compel language development. Expand your perspective, and learn to solve multicore and distribution problems. In each language, you'll solve a non-trivial problem, using the techniques that make that language special. Write a fully functional game in Elm, without a single callback, that compiles to JavaScript so you can deploy it in any browser. Write a logic program in Clojure using a programming model, MiniKanren, that is as powerful as Prolog but much better at interacting with the outside world. Build a distributed program in Elixir with Lisp-style macros, rich Ruby-like syntax, and the richness of the Erlang virtual machine. Build your own object layer in Lua, a statistical program in Julia, a proof in code with Idris, and a quiz game in Factor. When you're done, you'll have written programs in five different programming paradigms that were written on three different continents. You'll have explored four languages on the leading edge, invented in the past five years, and three more radically different languages, each with something significant to teach you.","language":"en","currency":"USD","id":"1680504746","title":"Seven More Languages in Seven Weeks","infoLink":"https:\/\/play.google.com\/store\/books\/details?id=ZA9QDwAAQBAJ&source=gbs_api","authors":["Bruce Tate","Ian Dees","Frederic Daoud","Jack Moffitt"]},{"pageCount":488,"thumbnail":"http:\/\/books.google.com\/books\/content?id=PgK1GbyiiDUC&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api","price":17.27,"subtitle":"The Definitive Guide","description":"Of all the Ajax-specific frameworks that have popped up in recent years, one clearly stands out as the industrial strength solution. Dojo is not just another JavaScript toolkit\u2014it's the JavaScript toolkit\u2014and Dojo: The Definitive Guide demonstrates how to tame Dojo's extensive library of utilities so that you can build rich and responsive web applications like never before. Dojo founder Alex Russell gives a foreword that explains the \"why\" of Dojo and of this book. Dojo provides an end-to-end solution for development in the browser, including everything from the core JavaScript library and turnkey widgets to build tools and a testing framework. Its vibrant open source community keeps adding to Dojo's arsenal, and this book provides an ideal companion to Dojo's official documentation. Dojo: the Definitive Guide gives you the most thorough overview of this toolkit available, showing you everything from how to create complex layouts and form controls closely resembling those found in the most advanced desktop applications with stock widgets, to advanced JavaScript idioms to AJAX and advanced communication transports. With this definitive reference you get: Get a concise introduction to Dojo that's good for all 1.x versions Well-explained examples, with scores of tested code samples, that let you see Dojo in action A comprehensive reference to Dojo's standard JavaScript library (including fundamental utilities in Base, Dojo's tiny but powerful kernel) that you'll wonder how you ever lived without An extensive look at additional Core features, such as animations, drag-and-drop, back-button handling, animations like wipe and slide, and more Exhaustive coverage of out-of-the-box Dijits (Dojo widgets) as well as definitive coverage on how to create your own, either from scratch or building on existing ones An itemized inventory of DojoX subprojects, the build tools, and the DOH, Dojo's unit-testing framework that you can use with Dojo\u2014or anywhere else If you're a DHTML-toting web developer, you need to read this book\u2014whether you're a one-person operation or part of an organization employing scores of developers. Dojo packs the standard JavaScript library you've always wanted, and Dojo: The Definitive Guide helps you transform your ideas into working applications quickly by leveraging design concepts you already know.","language":"en","currency":"USD","id":"059655172X","title":"Dojo: The Definitive Guide","infoLink":"https:\/\/play.google.com\/store\/books\/details?id=PgK1GbyiiDUC&source=gbs_api","authors":["Matthew A. Russell"]},{"pageCount":178,"thumbnail":"http:\/\/books.google.com\/books\/content?id=uqoiy8Qk4WsC&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api","price":7.99,"subtitle":"Extensible Markup Language","description":"XML, the Extensible Markup Language, is everywhere: the syntax of choice for newly designed document formats across almost all computer applications. Now used daily by developers, XML is living up to its reputation as one of the most important developments in document interchange in the history of computing. A perennial bestseller, the handy XML Pocket Reference from O'Reilly has been revised once again to give you quick access to the latest goods. In addition to its comprehensive look at XML, this third edition has been updated with new material on Namespaces and XML Schema--considered among the most important elements in current XML use--along with RELAX NG and Schematron, additional powerful tools for describing XML document structures. Like other titles in O'Reilly's Pocket Reference series, the XML Pocket Reference, 3rd Edition features a well-organized format that gets right to the point. As a result, it's already won over the allegiance of developers everywhere. If you need XML answers quick and on the fly, this compact book is most definitely the book for you.","language":"en","currency":"USD","id":"9781449379117","title":"XML Pocket Reference","infoLink":"https:\/\/play.google.com\/store\/books\/details?id=uqoiy8Qk4WsC&source=gbs_api","authors":["Simon St. Laurent","Michael Fitzgerald"]},{"pageCount":816,"thumbnail":"http:\/\/books.google.com\/books\/content?id=ZZ_6DwAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api","price":19.79,"subtitle":"A deep dive into distributed ledgers, consensus protocols, smart contracts, DApps, cryptocurrencies, Ethereum, and more, 3rd Edition","description":"Mastering Blockchain, Third Edition is the blockchain bible to equip you with extensive knowledge of distributed ledgers, cryptocurrencies, smart contracts, consensus algorithms, cryptography and blockchain platforms such as Ethereum, Bitcoin, and many more.","language":"en","currency":"USD","id":"1839211377","title":"Mastering Blockchain","infoLink":"https:\/\/play.google.com\/store\/books\/details?id=ZZ_6DwAAQBAJ&source=gbs_api","authors":["Imran Bashir"]},{"pageCount":304,"thumbnail":"http:\/\/books.google.com\/books\/content?id=prtSDwAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api","price":42.99,"subtitle":null,"description":"Drowning in unnecessary complexity, unmanaged state, and tangles of spaghetti code? In the best tradition of Lisp, Clojure gets out of your way so you can focus on expressing simple solutions to hard problems. Clojure cuts through complexity by providing a set of composable tools--immutable data, functions, macros, and the interactive REPL. Written by members of the Clojure core team, this book is the essential, definitive guide to Clojure. This new edition includes information on all the newest features of Clojure, such as transducers and specs. Clojure joins the flexibility and agility of Lisp with the reach, stability, and performance of Java. Combine Clojure's tools for maximum effectiveness as you work with immutable data, functional programming, and safe concurrency to write programs that solve real-world problems. Start by reading and understanding Clojure syntax and see how Clojure is evaluated. From there, find out about the sequence abstraction, which combines immutable collections with functional programming to create truly reusable data transformation code. Clojure is a functional language; learn how to write programs in a functional style, and when and how to use recursion to your advantage. Discover Clojure's unique approach to state and identity, techniques for polymorphism and open systems using multimethods and protocols, and how to leverage Clojure's metaprogramming capabilities via macros. Finally, put all the pieces together in a real program. New to this edition is coverage of Clojure's spec library, one of the most interesting new features of Clojure for describing both data and functions. You can use Clojure spec to validate data, destructure data, explain invalid data, and generate large numbers of tests to verify the correctness of your code. With this book, you'll learn how to think in Clojure, and how to take advantage of its combined strengths to build powerful programs quickly. What You Need: Java 6 or higher Clojure 1.9","language":"en","currency":"USD","id":"1680505726","title":"Programming Clojure","infoLink":"https:\/\/play.google.com\/store\/books\/details?id=prtSDwAAQBAJ&source=gbs_api","authors":["Alex Miller","Stuart Halloway","Aaron Bedra"]},{"pageCount":448,"thumbnail":"http:\/\/books.google.com\/books\/content?id=h7ThRRiEjX8C&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api","price":15.39,"subtitle":null,"description":"While most books written about Rails cater to programmers looking for information on data structures, Learning Rails targets web developers whose programming experience is tied directly to the Web. Rather than begin with the inner layers of a Rails web application--the models and controllers--this unique book approaches Rails development from the outer layer: the application interface. You'll learn how to create something visible with Rails before reaching the more difficult database models and controller code. With Learning Rails, you can start from the foundations of web design you already know, and then move more deeply into Ruby, objects, and database structures. This book will help you: Present web content by building an application with a basic view and a simple controller, while learning Ruby along the way Build forms and process their results, progressing from the simple to the more complex Connect forms to models by setting up a database, and use Rails' ActiveRecord to create code that maps to database structures Use Rails scaffolding to build applications from a view-centric perspective Add common web application elements such as sessions, cookies, and authentication Build applications that combine data from multiple tables Create simple but dynamic interfaces with Rails and Ajax Once you complete Learning Rails, you'll be comfortable working with the Rails web framework, and you'll be well on your way to becoming a Rails guru.","language":"en","currency":"USD","id":"0596554214","title":"Learning Rails","infoLink":"https:\/\/play.google.com\/store\/books\/details?id=h7ThRRiEjX8C&source=gbs_api","authors":["Simon St. Laurent","Edd Dumbill"]},{"pageCount":831,"thumbnail":"http:\/\/books.google.com\/books\/content?id=MgNmy8PIeyQC&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api","price":151.2,"subtitle":null,"description":"Handbook of Neuroevolution Through Erlang presents both the theory behind, and the methodology of, developing a neuroevolutionary-based computational intelligence system using Erlang. With a foreword written by Joe Armstrong, this handbook offers an extensive tutorial for creating a state of the art Topology and Weight Evolving Artificial Neural Network (TWEANN) platform. In a step-by-step format, the reader is guided from a single simulated neuron to a complete system. By following these steps, the reader will be able to use novel technology to build a TWEANN system, which can be applied to Artificial Life simulation, and Forex trading. Because of Erlang\u2019s architecture, it perfectly matches that of evolutionary and neurocomptational systems. As a programming language, it is a concurrent, message passing paradigm which allows the developers to make full use of the multi-core & multi-cpu systems. Handbook of Neuroevolution Through Erlang explains how to leverage Erlang\u2019s features in the field of machine learning, and the system\u2019s real world applications, ranging from algorithmic financial trading to artificial life and robotics.","language":"en","currency":"USD","id":"1461444632","title":"Handbook of Neuroevolution Through Erlang","infoLink":"https:\/\/play.google.com\/store\/books\/details?id=MgNmy8PIeyQC&source=gbs_api","authors":["Gene I. Sher"]},{"pageCount":400,"thumbnail":"http:\/\/books.google.com\/books\/content?id=SJHvCgAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api","price":17.27,"subtitle":null,"description":"The Go Programming Language is the authoritative resource for any programmer who wants to learn Go. It shows how to write clear and idiomatic Go to solve real-world problems. The book does not assume prior knowledge of Go nor experience with any specific language, so you\u2019ll find it accessible whether you\u2019re most comfortable with JavaScript, Ruby, Python, Java, or C++. The first chapter is a tutorial on the basic concepts of Go, introduced through programs for file I\/O and text processing, simple graphics, and web clients and servers. Early chapters cover the structural elements of Go programs: syntax, control flow, data types, and the organization of a program into packages, files, and functions. The examples illustrate many packages from the standard library and show how to create new ones of your own. Later chapters explain the package mechanism in more detail, and how to build, test, and maintain projects using the go tool. The chapters on methods and interfaces introduce Go\u2019s unconventional approach to object-oriented programming, in which methods can be declared on any type and interfaces are implicitly satisfied. They explain the key principles of encapsulation, composition, and substitutability using realistic examples. Two chapters on concurrency present in-depth approaches to this increasingly important topic. The first, which covers the basic mechanisms of goroutines and channels, illustrates the style known as communicating sequential processes for which Go is renowned. The second covers more traditional aspects of concurrency with shared variables. These chapters provide a solid foundation for programmers encountering concurrency for the first time. The final two chapters explore lower-level features of Go. One covers the art of metaprogramming using reflection. The other shows how to use the unsafe package to step outside the type system for special situations, and how to use the cgo tool to create Go bindings for C libraries. The book features hundreds of interesting and practical examples of well-written Go code that cover the whole language, its most important packages, and a wide range of applications. Each chapter has exercises to test your understanding and explore extensions and alternatives. Source code is freely available for download from http:\/\/gopl.io\/ and may be conveniently fetched, built, and installed using the go get command.","language":"en","currency":"USD","id":"0134190564","title":"The Go Programming Language","infoLink":"https:\/\/play.google.com\/store\/books\/details?id=SJHvCgAAQBAJ&source=gbs_api","authors":["Alan A. A. Donovan","Brian W. Kernighan"]},{"pageCount":608,"thumbnail":"http:\/\/books.google.com\/books\/content?id=Idi8DwAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api","price":12.64,"subtitle":"Learn to code in Python and kickstart your career in software development or data science","description":"More than just a Python guide for beginners, The Python Workshop takes you through the full spectrum of basic to advanced topics, equipping you with the skills you need to get started with data science and more. Filled with practical step-by-step examples and interactive exercises, you'll learn by doing as you grow your new Python skillset.","language":"en","currency":"USD","id":"1838984534","title":"The The Python Workshop","infoLink":"https:\/\/play.google.com\/store\/books\/details?id=Idi8DwAAQBAJ&source=gbs_api","authors":["Andrew Bird","Dr Lau Cher Han","Mario Corchero JimÃ©nez","Graham Lee","Corey Wade"]},{"pageCount":null,"thumbnail":"http:\/\/books.google.com\/books\/content?id=LhOlDwAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api","price":30.39,"subtitle":"your journey to mastery, 20th Anniversary Edition","description":"\u201COne of the most significant books in my life.\u201D \u2013Obie Fernandez, Author, The Rails Way \u201CTwenty years ago, the first edition of The Pragmatic Programmer completely changed the trajectory of my career. This new edition could do the same for yours.\u201D \u2013Mike Cohn, Author of Succeeding with Agile, Agile Estimating and Planning, and User Stories Applied \u201C. . . filled with practical advice, both technical and professional, that will serve you and your projects well for years to come.\u201D \u2013Andrea Goulet, CEO, Corgibytes, Founder, LegacyCode.Rocks \u201C. . . lightning does strike twice, and this book is proof.\u201D \u2013VM (Vicky) Brasseur, Director of Open Source Strategy, Juniper Networks The Pragmatic Programmer is one of those rare tech books you\u2019ll read, re-read, and read again over the years. Whether you\u2019re new to the field or an experienced practitioner, you\u2019ll come away with fresh insights each and every time. Dave Thomas and Andy Hunt wrote the first edition of this influential book in 1999 to help their clients create better software and rediscover the joy of coding. These lessons have helped a generation of programmers examine the very essence of software development, independent of any particular language, framework, or methodology, and the Pragmatic philosophy has spawned hundreds of books, screencasts, and audio books, as well as thousands of careers and success stories. Now, twenty years later, this new edition re-examines what it means to be a modern programmer. Topics range from personal responsibility and career development to architectural techniques for keeping your code flexible and easy to adapt and reuse. Read this book, and you\u2019ll learn how to: Fight software rot Learn continuously Avoid the trap of duplicating knowledge Write flexible, dynamic, and adaptable code Harness the power of basic tools Avoid programming by coincidence Learn real requirements Solve the underlying problems of concurrent code Guard against security vulnerabilities Build teams of Pragmatic Programmers Take responsibility for your work and career Test ruthlessly and effectively, including property-based testing Implement the Pragmatic Starter Kit Delight your users Written as a series of self-contained sections and filled with classic and fresh anecdotes, thoughtful examples, and interesting analogies, The Pragmatic Programmer illustrates the best approaches and major pitfalls of many different aspects of software development. Whether you\u2019re a new coder, an experienced programmer, or a manager responsible for software projects, use these lessons daily, and you\u2019ll quickly see improvements in personal productivity, accuracy, and job satisfaction. You\u2019ll learn skills and develop habits and attitudes that form the foundation for long-term success in your career. You\u2019ll become a Pragmatic Programmer. Register your book for convenient access to downloads, updates, and\/or corrections as they become available. See inside book for details.","language":"en","currency":"USD","id":"0135956919","title":"The Pragmatic Programmer","infoLink":"https:\/\/play.google.com\/store\/books\/details?id=LhOlDwAAQBAJ&source=gbs_api","authors":["David Thomas","Andrew Hunt"]},{"pageCount":300,"thumbnail":"http:\/\/books.google.com\/books\/content?id=459MDwAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api","price":14.17,"subtitle":"The History of Our Future","description":"Network revolutions of the past have shaped the present and set the stage for the revolution we are experiencing today In an era of seemingly instant change, it's easy to think that today's revolutions\u2014in communications, business, and many areas of daily life\u2014are unprecedented. Today's changes may be new and may be happening faster than ever before. But our ancestors at times were just as bewildered by rapid upheavals in what we now call \u201Cnetworks\u201D\u2014the physical links that bind any society together. In this fascinating book, former FCC chairman Tom Wheeler brings to life the two great network revolutions of the past and uses them to help put in perspective the confusion, uncertainty, and even excitement most people face today. The first big network revolution was the invention of movable-type printing in the fifteenth century. This book, its millions of predecessors, and even such broad trends as the Reformation, the Renaissance, and the multiple scientific revolutions of the past 500 years would not have been possible without that one invention. The second revolution came with the invention of the telegraph early in the nineteenth century. Never before had people been able to communicate over long distances faster than a horse could travel. Along with the development of the world's first high-speed network\u2014the railroad\u2014the telegraph upended centuries of stability and literally redrew the map of the world. Wheeler puts these past revolutions into the perspective of today, when rapid-fire changes in networking are upending the nature of work, personal privacy, education, the media, and nearly every other aspect of modern life. But he doesn't leave it there. Outlining \u201CWhat's Next,\u201D he describes how artificial intelligence, virtual reality, blockchain, and the need for cybersecurity are laying the foundation for a third network revolution.","language":"en","currency":"USD","id":"0815735332","title":"From Gutenberg to Google","infoLink":"https:\/\/play.google.com\/store\/books\/details?id=459MDwAAQBAJ&source=gbs_api","authors":["Tom Wheeler"]},{"pageCount":568,"thumbnail":"http:\/\/books.google.com\/books\/content?id=y83aDwAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api","price":28.49,"subtitle":"Build powerful and reliable Python web applications from scratch, 3rd Edition","description":"Learn Django 3 with four end-to-end web projects Key Features Learn Django 3 by building real-world web applications from scratch in Python, using coding best practices Integrate other technologies into your application with clear, step-by-step explanations and comprehensive example code Implement advanced functionalities like a full-text search engine, a user activity stream, or a recommendation engine Add real-time features with Django Channels and WebSockets Book Description If you want to learn the entire process of developing professional web applications with Python and Django, then this book is for you. In the process of building four professional Django projects, you will learn about Django 3 features, how to solve common web development problems, how to implement best practices, and how to successfully deploy your applications. In this book, you will build a blog application, a social image bookmarking website, an online shop, and an e-learning platform. Step-by-step guidance will teach you how to integrate popular technologies, enhance your applications with AJAX, create RESTful APIs, and set up a production environment for your Django projects. By the end of this book, you will have mastered Django 3 by building advanced web applications. What you will learn Build real-world web applications Learn Django essentials, including models, views, ORM, templates, URLs, forms, and authentication Implement advanced features such as custom model fields, custom template tags, cache, middleware, localization, and more Create complex functionalities, such as AJAX interactions, social authentication, a full-text search engine, a payment system, a CMS, a RESTful API, and more Integrate other technologies, including Redis, Celery, RabbitMQ, PostgreSQL, and Channels, into your projects Deploy Django projects in production using NGINX, uWSGI, and Daphne Who this book is for This book is intended for developers with Python knowledge who wish to learn Django in a pragmatic way. Perhaps you are completely new to Django, or you already know a little but you want to get the most out of it. This book will help you to master the most relevant areas of the framework by building practical projects from scratch. You need to have familiarity with programming concepts in order to read this book. Some previous knowledge of HTML and JavaScript is assumed.","language":"en","currency":"USD","id":"1838989323","title":"Django 3 By Example","infoLink":"https:\/\/play.google.com\/store\/books\/details?id=y83aDwAAQBAJ&source=gbs_api","authors":["Antonio MelÃ©"]},{"pageCount":320,"thumbnail":"http:\/\/books.google.com\/books\/content?id=ZA9QDwAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api","price":32.99,"subtitle":"Languages That Are Shaping the Future","description":"Great programmers aren't born--they're made. The industry is moving from object-oriented languages to functional languages, and you need to commit to radical improvement. New programming languages arm you with the tools and idioms you need to refine your craft. While other language primers take you through basic installation and \"Hello, World,\" we aim higher. Each language in Seven More Languages in Seven Weeks will take you on a step-by-step journey through the most important paradigms of our time. You'll learn seven exciting languages: Lua, Factor, Elixir, Elm, Julia, MiniKanren, and Idris. Learn from the award-winning programming series that inspired the Elixir language. Hear how other programmers across broadly different communities solve problems important enough to compel language development. Expand your perspective, and learn to solve multicore and distribution problems. In each language, you'll solve a non-trivial problem, using the techniques that make that language special. Write a fully functional game in Elm, without a single callback, that compiles to JavaScript so you can deploy it in any browser. Write a logic program in Clojure using a programming model, MiniKanren, that is as powerful as Prolog but much better at interacting with the outside world. Build a distributed program in Elixir with Lisp-style macros, rich Ruby-like syntax, and the richness of the Erlang virtual machine. Build your own object layer in Lua, a statistical program in Julia, a proof in code with Idris, and a quiz game in Factor. When you're done, you'll have written programs in five different programming paradigms that were written on three different continents. You'll have explored four languages on the leading edge, invented in the past five years, and three more radically different languages, each with something significant to teach you.","language":"en","currency":"USD","id":"1680504746","title":"Seven More Languages in Seven Weeks","infoLink":"https:\/\/play.google.com\/store\/books\/details?id=ZA9QDwAAQBAJ&source=gbs_api","authors":["Bruce Tate","Ian Dees","Frederic Daoud","Jack Moffitt"]},{"pageCount":488,"thumbnail":"http:\/\/books.google.com\/books\/content?id=PgK1GbyiiDUC&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api","price":17.27,"subtitle":"The Definitive Guide","description":"Of all the Ajax-specific frameworks that have popped up in recent years, one clearly stands out as the industrial strength solution. Dojo is not just another JavaScript toolkit\u2014it's the JavaScript toolkit\u2014and Dojo: The Definitive Guide demonstrates how to tame Dojo's extensive library of utilities so that you can build rich and responsive web applications like never before. Dojo founder Alex Russell gives a foreword that explains the \"why\" of Dojo and of this book. Dojo provides an end-to-end solution for development in the browser, including everything from the core JavaScript library and turnkey widgets to build tools and a testing framework. Its vibrant open source community keeps adding to Dojo's arsenal, and this book provides an ideal companion to Dojo's official documentation. Dojo: the Definitive Guide gives you the most thorough overview of this toolkit available, showing you everything from how to create complex layouts and form controls closely resembling those found in the most advanced desktop applications with stock widgets, to advanced JavaScript idioms to AJAX and advanced communication transports. With this definitive reference you get: Get a concise introduction to Dojo that's good for all 1.x versions Well-explained examples, with scores of tested code samples, that let you see Dojo in action A comprehensive reference to Dojo's standard JavaScript library (including fundamental utilities in Base, Dojo's tiny but powerful kernel) that you'll wonder how you ever lived without An extensive look at additional Core features, such as animations, drag-and-drop, back-button handling, animations like wipe and slide, and more Exhaustive coverage of out-of-the-box Dijits (Dojo widgets) as well as definitive coverage on how to create your own, either from scratch or building on existing ones An itemized inventory of DojoX subprojects, the build tools, and the DOH, Dojo's unit-testing framework that you can use with Dojo\u2014or anywhere else If you're a DHTML-toting web developer, you need to read this book\u2014whether you're a one-person operation or part of an organization employing scores of developers. Dojo packs the standard JavaScript library you've always wanted, and Dojo: The Definitive Guide helps you transform your ideas into working applications quickly by leveraging design concepts you already know.","language":"en","currency":"USD","id":"059655172X","title":"Dojo: The Definitive Guide","infoLink":"https:\/\/play.google.com\/store\/books\/details?id=PgK1GbyiiDUC&source=gbs_api","authors":["Matthew A. Russell"]},{"pageCount":178,"thumbnail":"http:\/\/books.google.com\/books\/content?id=uqoiy8Qk4WsC&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api","price":7.99,"subtitle":"Extensible Markup Language","description":"XML, the Extensible Markup Language, is everywhere: the syntax of choice for newly designed document formats across almost all computer applications. Now used daily by developers, XML is living up to its reputation as one of the most important developments in document interchange in the history of computing. A perennial bestseller, the handy XML Pocket Reference from O'Reilly has been revised once again to give you quick access to the latest goods. In addition to its comprehensive look at XML, this third edition has been updated with new material on Namespaces and XML Schema--considered among the most important elements in current XML use--along with RELAX NG and Schematron, additional powerful tools for describing XML document structures. Like other titles in O'Reilly's Pocket Reference series, the XML Pocket Reference, 3rd Edition features a well-organized format that gets right to the point. As a result, it's already won over the allegiance of developers everywhere. If you need XML answers quick and on the fly, this compact book is most definitely the book for you.","language":"en","currency":"USD","id":"9781449379117","title":"XML Pocket Reference","infoLink":"https:\/\/play.google.com\/store\/books\/details?id=uqoiy8Qk4WsC&source=gbs_api","authors":["Simon St. Laurent","Michael Fitzgerald"]},{"pageCount":816,"thumbnail":"http:\/\/books.google.com\/books\/content?id=ZZ_6DwAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api","price":19.79,"subtitle":"A deep dive into distributed ledgers, consensus protocols, smart contracts, DApps, cryptocurrencies, Ethereum, and more, 3rd Edition","description":"Mastering Blockchain, Third Edition is the blockchain bible to equip you with extensive knowledge of distributed ledgers, cryptocurrencies, smart contracts, consensus algorithms, cryptography and blockchain platforms such as Ethereum, Bitcoin, and many more.","language":"en","currency":"USD","id":"1839211377","title":"Mastering Blockchain","infoLink":"https:\/\/play.google.com\/store\/books\/details?id=ZZ_6DwAAQBAJ&source=gbs_api","authors":["Imran Bashir"]},{"pageCount":304,"thumbnail":"http:\/\/books.google.com\/books\/content?id=prtSDwAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api","price":42.99,"subtitle":null,"description":"Drowning in unnecessary complexity, unmanaged state, and tangles of spaghetti code? In the best tradition of Lisp, Clojure gets out of your way so you can focus on expressing simple solutions to hard problems. Clojure cuts through complexity by providing a set of composable tools--immutable data, functions, macros, and the interactive REPL. Written by members of the Clojure core team, this book is the essential, definitive guide to Clojure. This new edition includes information on all the newest features of Clojure, such as transducers and specs. Clojure joins the flexibility and agility of Lisp with the reach, stability, and performance of Java. Combine Clojure's tools for maximum effectiveness as you work with immutable data, functional programming, and safe concurrency to write programs that solve real-world problems. Start by reading and understanding Clojure syntax and see how Clojure is evaluated. From there, find out about the sequence abstraction, which combines immutable collections with functional programming to create truly reusable data transformation code. Clojure is a functional language; learn how to write programs in a functional style, and when and how to use recursion to your advantage. Discover Clojure's unique approach to state and identity, techniques for polymorphism and open systems using multimethods and protocols, and how to leverage Clojure's metaprogramming capabilities via macros. Finally, put all the pieces together in a real program. New to this edition is coverage of Clojure's spec library, one of the most interesting new features of Clojure for describing both data and functions. You can use Clojure spec to validate data, destructure data, explain invalid data, and generate large numbers of tests to verify the correctness of your code. With this book, you'll learn how to think in Clojure, and how to take advantage of its combined strengths to build powerful programs quickly. What You Need: Java 6 or higher Clojure 1.9","language":"en","currency":"USD","id":"1680505726","title":"Programming Clojure","infoLink":"https:\/\/play.google.com\/store\/books\/details?id=prtSDwAAQBAJ&source=gbs_api","authors":["Alex Miller","Stuart Halloway","Aaron Bedra"]},{"pageCount":448,"thumbnail":"http:\/\/books.google.com\/books\/content?id=h7ThRRiEjX8C&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api","price":15.39,"subtitle":null,"description":"While most books written about Rails cater to programmers looking for information on data structures, Learning Rails targets web developers whose programming experience is tied directly to the Web. Rather than begin with the inner layers of a Rails web application--the models and controllers--this unique book approaches Rails development from the outer layer: the application interface. You'll learn how to create something visible with Rails before reaching the more difficult database models and controller code. With Learning Rails, you can start from the foundations of web design you already know, and then move more deeply into Ruby, objects, and database structures. This book will help you: Present web content by building an application with a basic view and a simple controller, while learning Ruby along the way Build forms and process their results, progressing from the simple to the more complex Connect forms to models by setting up a database, and use Rails' ActiveRecord to create code that maps to database structures Use Rails scaffolding to build applications from a view-centric perspective Add common web application elements such as sessions, cookies, and authentication Build applications that combine data from multiple tables Create simple but dynamic interfaces with Rails and Ajax Once you complete Learning Rails, you'll be comfortable working with the Rails web framework, and you'll be well on your way to becoming a Rails guru.","language":"en","currency":"USD","id":"0596554214","title":"Learning Rails","infoLink":"https:\/\/play.google.com\/store\/books\/details?id=h7ThRRiEjX8C&source=gbs_api","authors":["Simon St. Laurent","Edd Dumbill"]},{"pageCount":831,"thumbnail":"http:\/\/books.google.com\/books\/content?id=MgNmy8PIeyQC&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api","price":151.2,"subtitle":null,"description":"Handbook of Neuroevolution Through Erlang presents both the theory behind, and the methodology of, developing a neuroevolutionary-based computational intelligence system using Erlang. With a foreword written by Joe Armstrong, this handbook offers an extensive tutorial for creating a state of the art Topology and Weight Evolving Artificial Neural Network (TWEANN) platform. In a step-by-step format, the reader is guided from a single simulated neuron to a complete system. By following these steps, the reader will be able to use novel technology to build a TWEANN system, which can be applied to Artificial Life simulation, and Forex trading. Because of Erlang\u2019s architecture, it perfectly matches that of evolutionary and neurocomptational systems. As a programming language, it is a concurrent, message passing paradigm which allows the developers to make full use of the multi-core & multi-cpu systems. Handbook of Neuroevolution Through Erlang explains how to leverage Erlang\u2019s features in the field of machine learning, and the system\u2019s real world applications, ranging from algorithmic financial trading to artificial life and robotics.","language":"en","currency":"USD","id":"1461444632","title":"Handbook of Neuroevolution Through Erlang","infoLink":"https:\/\/play.google.com\/store\/books\/details?id=MgNmy8PIeyQC&source=gbs_api","authors":["Gene I. Sher"]},{"pageCount":400,"thumbnail":"http:\/\/books.google.com\/books\/content?id=SJHvCgAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api","price":17.27,"subtitle":null,"description":"The Go Programming Language is the authoritative resource for any programmer who wants to learn Go. It shows how to write clear and idiomatic Go to solve real-world problems. The book does not assume prior knowledge of Go nor experience with any specific language, so you\u2019ll find it accessible whether you\u2019re most comfortable with JavaScript, Ruby, Python, Java, or C++. The first chapter is a tutorial on the basic concepts of Go, introduced through programs for file I\/O and text processing, simple graphics, and web clients and servers. Early chapters cover the structural elements of Go programs: syntax, control flow, data types, and the organization of a program into packages, files, and functions. The examples illustrate many packages from the standard library and show how to create new ones of your own. Later chapters explain the package mechanism in more detail, and how to build, test, and maintain projects using the go tool. The chapters on methods and interfaces introduce Go\u2019s unconventional approach to object-oriented programming, in which methods can be declared on any type and interfaces are implicitly satisfied. They explain the key principles of encapsulation, composition, and substitutability using realistic examples. Two chapters on concurrency present in-depth approaches to this increasingly important topic. The first, which covers the basic mechanisms of goroutines and channels, illustrates the style known as communicating sequential processes for which Go is renowned. The second covers more traditional aspects of concurrency with shared variables. These chapters provide a solid foundation for programmers encountering concurrency for the first time. The final two chapters explore lower-level features of Go. One covers the art of metaprogramming using reflection. The other shows how to use the unsafe package to step outside the type system for special situations, and how to use the cgo tool to create Go bindings for C libraries. The book features hundreds of interesting and practical examples of well-written Go code that cover the whole language, its most important packages, and a wide range of applications. Each chapter has exercises to test your understanding and explore extensions and alternatives. Source code is freely available for download from http:\/\/gopl.io\/ and may be conveniently fetched, built, and installed using the go get command.","language":"en","currency":"USD","id":"0134190564","title":"The Go Programming Language","infoLink":"https:\/\/play.google.com\/store\/books\/details?id=SJHvCgAAQBAJ&source=gbs_api","authors":["Alan A. A. Donovan","Brian W. Kernighan"]},{"pageCount":608,"thumbnail":"http:\/\/books.google.com\/books\/content?id=Idi8DwAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api","price":12.64,"subtitle":"Learn to code in Python and kickstart your career in software development or data science","description":"More than just a Python guide for beginners, The Python Workshop takes you through the full spectrum of basic to advanced topics, equipping you with the skills you need to get started with data science and more. Filled with practical step-by-step examples and interactive exercises, you'll learn by doing as you grow your new Python skillset.","language":"en","currency":"USD","id":"1838984534","title":"The The Python Workshop","infoLink":"https:\/\/play.google.com\/store\/books\/details?id=Idi8DwAAQBAJ&source=gbs_api","authors":["Andrew Bird","Dr Lau Cher Han","Mario Corchero JimÃ©nez","Graham Lee","Corey Wade"]},{"pageCount":null,"thumbnail":"http:\/\/books.google.com\/books\/content?id=LhOlDwAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api","price":30.39,"subtitle":"your journey to mastery, 20th Anniversary Edition","description":"\u201COne of the most significant books in my life.\u201D \u2013Obie Fernandez, Author, The Rails Way \u201CTwenty years ago, the first edition of The Pragmatic Programmer completely changed the trajectory of my career. This new edition could do the same for yours.\u201D \u2013Mike Cohn, Author of Succeeding with Agile, Agile Estimating and Planning, and User Stories Applied \u201C. . . filled with practical advice, both technical and professional, that will serve you and your projects well for years to come.\u201D \u2013Andrea Goulet, CEO, Corgibytes, Founder, LegacyCode.Rocks \u201C. . . lightning does strike twice, and this book is proof.\u201D \u2013VM (Vicky) Brasseur, Director of Open Source Strategy, Juniper Networks The Pragmatic Programmer is one of those rare tech books you\u2019ll read, re-read, and read again over the years. Whether you\u2019re new to the field or an experienced practitioner, you\u2019ll come away with fresh insights each and every time. Dave Thomas and Andy Hunt wrote the first edition of this influential book in 1999 to help their clients create better software and rediscover the joy of coding. These lessons have helped a generation of programmers examine the very essence of software development, independent of any particular language, framework, or methodology, and the Pragmatic philosophy has spawned hundreds of books, screencasts, and audio books, as well as thousands of careers and success stories. Now, twenty years later, this new edition re-examines what it means to be a modern programmer. Topics range from personal responsibility and career development to architectural techniques for keeping your code flexible and easy to adapt and reuse. Read this book, and you\u2019ll learn how to: Fight software rot Learn continuously Avoid the trap of duplicating knowledge Write flexible, dynamic, and adaptable code Harness the power of basic tools Avoid programming by coincidence Learn real requirements Solve the underlying problems of concurrent code Guard against security vulnerabilities Build teams of Pragmatic Programmers Take responsibility for your work and career Test ruthlessly and effectively, including property-based testing Implement the Pragmatic Starter Kit Delight your users Written as a series of self-contained sections and filled with classic and fresh anecdotes, thoughtful examples, and interesting analogies, The Pragmatic Programmer illustrates the best approaches and major pitfalls of many different aspects of software development. Whether you\u2019re a new coder, an experienced programmer, or a manager responsible for software projects, use these lessons daily, and you\u2019ll quickly see improvements in personal productivity, accuracy, and job satisfaction. You\u2019ll learn skills and develop habits and attitudes that form the foundation for long-term success in your career. You\u2019ll become a Pragmatic Programmer. Register your book for convenient access to downloads, updates, and\/or corrections as they become available. See inside book for details.","language":"en","currency":"USD","id":"0135956919","title":"The Pragmatic Programmer","infoLink":"https:\/\/play.google.com\/store\/books\/details?id=LhOlDwAAQBAJ&source=gbs_api","authors":["David Thomas","Andrew Hunt"]},{"pageCount":300,"thumbnail":"http:\/\/books.google.com\/books\/content?id=459MDwAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api","price":14.17,"subtitle":"The History of Our Future","description":"Network revolutions of the past have shaped the present and set the stage for the revolution we are experiencing today In an era of seemingly instant change, it's easy to think that today's revolutions\u2014in communications, business, and many areas of daily life\u2014are unprecedented. Today's changes may be new and may be happening faster than ever before. But our ancestors at times were just as bewildered by rapid upheavals in what we now call \u201Cnetworks\u201D\u2014the physical links that bind any society together. In this fascinating book, former FCC chairman Tom Wheeler brings to life the two great network revolutions of the past and uses them to help put in perspective the confusion, uncertainty, and even excitement most people face today. The first big network revolution was the invention of movable-type printing in the fifteenth century. This book, its millions of predecessors, and even such broad trends as the Reformation, the Renaissance, and the multiple scientific revolutions of the past 500 years would not have been possible without that one invention. The second revolution came with the invention of the telegraph early in the nineteenth century. Never before had people been able to communicate over long distances faster than a horse could travel. Along with the development of the world's first high-speed network\u2014the railroad\u2014the telegraph upended centuries of stability and literally redrew the map of the world. Wheeler puts these past revolutions into the perspective of today, when rapid-fire changes in networking are upending the nature of work, personal privacy, education, the media, and nearly every other aspect of modern life. But he doesn't leave it there. Outlining \u201CWhat's Next,\u201D he describes how artificial intelligence, virtual reality, blockchain, and the need for cybersecurity are laying the foundation for a third network revolution.","language":"en","currency":"USD","id":"0815735332","title":"From Gutenberg to Google","infoLink":"https:\/\/play.google.com\/store\/books\/details?id=459MDwAAQBAJ&source=gbs_api","authors":["Tom Wheeler"]},{"pageCount":568,"thumbnail":"http:\/\/books.google.com\/books\/content?id=y83aDwAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api","price":28.49,"subtitle":"Build powerful and reliable Python web applications from scratch, 3rd Edition","description":"Learn Django 3 with four end-to-end web projects Key Features Learn Django 3 by building real-world web applications from scratch in Python, using coding best practices Integrate other technologies into your application with clear, step-by-step explanations and comprehensive example code Implement advanced functionalities like a full-text search engine, a user activity stream, or a recommendation engine Add real-time features with Django Channels and WebSockets Book Description If you want to learn the entire process of developing professional web applications with Python and Django, then this book is for you. In the process of building four professional Django projects, you will learn about Django 3 features, how to solve common web development problems, how to implement best practices, and how to successfully deploy your applications. In this book, you will build a blog application, a social image bookmarking website, an online shop, and an e-learning platform. Step-by-step guidance will teach you how to integrate popular technologies, enhance your applications with AJAX, create RESTful APIs, and set up a production environment for your Django projects. By the end of this book, you will have mastered Django 3 by building advanced web applications. What you will learn Build real-world web applications Learn Django essentials, including models, views, ORM, templates, URLs, forms, and authentication Implement advanced features such as custom model fields, custom template tags, cache, middleware, localization, and more Create complex functionalities, such as AJAX interactions, social authentication, a full-text search engine, a payment system, a CMS, a RESTful API, and more Integrate other technologies, including Redis, Celery, RabbitMQ, PostgreSQL, and Channels, into your projects Deploy Django projects in production using NGINX, uWSGI, and Daphne Who this book is for This book is intended for developers with Python knowledge who wish to learn Django in a pragmatic way. Perhaps you are completely new to Django, or you already know a little but you want to get the most out of it. This book will help you to master the most relevant areas of the framework by building practical projects from scratch. You need to have familiarity with programming concepts in order to read this book. Some previous knowledge of HTML and JavaScript is assumed.","language":"en","currency":"USD","id":"1838989323","title":"Django 3 By Example","infoLink":"https:\/\/play.google.com\/store\/books\/details?id=y83aDwAAQBAJ&source=gbs_api","authors":["Antonio MelÃ©"]},{"pageCount":320,"thumbnail":"http:\/\/books.google.com\/books\/content?id=ZA9QDwAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api","price":32.99,"subtitle":"Languages That Are Shaping the Future","description":"Great programmers aren't born--they're made. The industry is moving from object-oriented languages to functional languages, and you need to commit to radical improvement. New programming languages arm you with the tools and idioms you need to refine your craft. While other language primers take you through basic installation and \"Hello, World,\" we aim higher. Each language in Seven More Languages in Seven Weeks will take you on a step-by-step journey through the most important paradigms of our time. You'll learn seven exciting languages: Lua, Factor, Elixir, Elm, Julia, MiniKanren, and Idris. Learn from the award-winning programming series that inspired the Elixir language. Hear how other programmers across broadly different communities solve problems important enough to compel language development. Expand your perspective, and learn to solve multicore and distribution problems. In each language, you'll solve a non-trivial problem, using the techniques that make that language special. Write a fully functional game in Elm, without a single callback, that compiles to JavaScript so you can deploy it in any browser. Write a logic program in Clojure using a programming model, MiniKanren, that is as powerful as Prolog but much better at interacting with the outside world. Build a distributed program in Elixir with Lisp-style macros, rich Ruby-like syntax, and the richness of the Erlang virtual machine. Build your own object layer in Lua, a statistical program in Julia, a proof in code with Idris, and a quiz game in Factor. When you're done, you'll have written programs in five different programming paradigms that were written on three different continents. You'll have explored four languages on the leading edge, invented in the past five years, and three more radically different languages, each with something significant to teach you.","language":"en","currency":"USD","id":"1680504746","title":"Seven More Languages in Seven Weeks","infoLink":"https:\/\/play.google.com\/store\/books\/details?id=ZA9QDwAAQBAJ&source=gbs_api","authors":["Bruce Tate","Ian Dees","Frederic Daoud","Jack Moffitt"]},{"pageCount":488,"thumbnail":"http:\/\/books.google.com\/books\/content?id=PgK1GbyiiDUC&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api","price":17.27,"subtitle":"The Definitive Guide","description":"Of all the Ajax-specific frameworks that have popped up in recent years, one clearly stands out as the industrial strength solution. Dojo is not just another JavaScript toolkit\u2014it's the JavaScript toolkit\u2014and Dojo: The Definitive Guide demonstrates how to tame Dojo's extensive library of utilities so that you can build rich and responsive web applications like never before. Dojo founder Alex Russell gives a foreword that explains the \"why\" of Dojo and of this book. Dojo provides an end-to-end solution for development in the browser, including everything from the core JavaScript library and turnkey widgets to build tools and a testing framework. Its vibrant open source community keeps adding to Dojo's arsenal, and this book provides an ideal companion to Dojo's official documentation. Dojo: the Definitive Guide gives you the most thorough overview of this toolkit available, showing you everything from how to create complex layouts and form controls closely resembling those found in the most advanced desktop applications with stock widgets, to advanced JavaScript idioms to AJAX and advanced communication transports. With this definitive reference you get: Get a concise introduction to Dojo that's good for all 1.x versions Well-explained examples, with scores of tested code samples, that let you see Dojo in action A comprehensive reference to Dojo's standard JavaScript library (including fundamental utilities in Base, Dojo's tiny but powerful kernel) that you'll wonder how you ever lived without An extensive look at additional Core features, such as animations, drag-and-drop, back-button handling, animations like wipe and slide, and more Exhaustive coverage of out-of-the-box Dijits (Dojo widgets) as well as definitive coverage on how to create your own, either from scratch or building on existing ones An itemized inventory of DojoX subprojects, the build tools, and the DOH, Dojo's unit-testing framework that you can use with Dojo\u2014or anywhere else If you're a DHTML-toting web developer, you need to read this book\u2014whether you're a one-person operation or part of an organization employing scores of developers. Dojo packs the standard JavaScript library you've always wanted, and Dojo: The Definitive Guide helps you transform your ideas into working applications quickly by leveraging design concepts you already know.","language":"en","currency":"USD","id":"059655172X","title":"Dojo: The Definitive Guide","infoLink":"https:\/\/play.google.com\/store\/books\/details?id=PgK1GbyiiDUC&source=gbs_api","authors":["Matthew A. Russell"]},{"pageCount":178,"thumbnail":"http:\/\/books.google.com\/books\/content?id=uqoiy8Qk4WsC&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api","price":7.99,"subtitle":"Extensible Markup Language","description":"XML, the Extensible Markup Language, is everywhere: the syntax of choice for newly designed document formats across almost all computer applications. Now used daily by developers, XML is living up to its reputation as one of the most important developments in document interchange in the history of computing. A perennial bestseller, the handy XML Pocket Reference from O'Reilly has been revised once again to give you quick access to the latest goods. In addition to its comprehensive look at XML, this third edition has been updated with new material on Namespaces and XML Schema--considered among the most important elements in current XML use--along with RELAX NG and Schematron, additional powerful tools for describing XML document structures. Like other titles in O'Reilly's Pocket Reference series, the XML Pocket Reference, 3rd Edition features a well-organized format that gets right to the point. As a result, it's already won over the allegiance of developers everywhere. If you need XML answers quick and on the fly, this compact book is most definitely the book for you.","language":"en","currency":"USD","id":"9781449379117","title":"XML Pocket Reference","infoLink":"https:\/\/play.google.com\/store\/books\/details?id=uqoiy8Qk4WsC&source=gbs_api","authors":["Simon St. Laurent","Michael Fitzgerald"]},{"pageCount":816,"thumbnail":"http:\/\/books.google.com\/books\/content?id=ZZ_6DwAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api","price":19.79,"subtitle":"A deep dive into distributed ledgers, consensus protocols, smart contracts, DApps, cryptocurrencies, Ethereum, and more, 3rd Edition","description":"Mastering Blockchain, Third Edition is the blockchain bible to equip you with extensive knowledge of distributed ledgers, cryptocurrencies, smart contracts, consensus algorithms, cryptography and blockchain platforms such as Ethereum, Bitcoin, and many more.","language":"en","currency":"USD","id":"1839211377","title":"Mastering Blockchain","infoLink":"https:\/\/play.google.com\/store\/books\/details?id=ZZ_6DwAAQBAJ&source=gbs_api","authors":["Imran Bashir"]},{"pageCount":304,"thumbnail":"http:\/\/books.google.com\/books\/content?id=prtSDwAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api","price":42.99,"subtitle":null,"description":"Drowning in unnecessary complexity, unmanaged state, and tangles of spaghetti code? In the best tradition of Lisp, Clojure gets out of your way so you can focus on expressing simple solutions to hard problems. Clojure cuts through complexity by providing a set of composable tools--immutable data, functions, macros, and the interactive REPL. Written by members of the Clojure core team, this book is the essential, definitive guide to Clojure. This new edition includes information on all the newest features of Clojure, such as transducers and specs. Clojure joins the flexibility and agility of Lisp with the reach, stability, and performance of Java. Combine Clojure's tools for maximum effectiveness as you work with immutable data, functional programming, and safe concurrency to write programs that solve real-world problems. Start by reading and understanding Clojure syntax and see how Clojure is evaluated. From there, find out about the sequence abstraction, which combines immutable collections with functional programming to create truly reusable data transformation code. Clojure is a functional language; learn how to write programs in a functional style, and when and how to use recursion to your advantage. Discover Clojure's unique approach to state and identity, techniques for polymorphism and open systems using multimethods and protocols, and how to leverage Clojure's metaprogramming capabilities via macros. Finally, put all the pieces together in a real program. New to this edition is coverage of Clojure's spec library, one of the most interesting new features of Clojure for describing both data and functions. You can use Clojure spec to validate data, destructure data, explain invalid data, and generate large numbers of tests to verify the correctness of your code. With this book, you'll learn how to think in Clojure, and how to take advantage of its combined strengths to build powerful programs quickly. What You Need: Java 6 or higher Clojure 1.9","language":"en","currency":"USD","id":"1680505726","title":"Programming Clojure","infoLink":"https:\/\/play.google.com\/store\/books\/details?id=prtSDwAAQBAJ&source=gbs_api","authors":["Alex Miller","Stuart Halloway","Aaron Bedra"]},{"pageCount":448,"thumbnail":"http:\/\/books.google.com\/books\/content?id=h7ThRRiEjX8C&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api","price":15.39,"subtitle":null,"description":"While most books written about Rails cater to programmers looking for information on data structures, Learning Rails targets web developers whose programming experience is tied directly to the Web. Rather than begin with the inner layers of a Rails web application--the models and controllers--this unique book approaches Rails development from the outer layer: the application interface. You'll learn how to create something visible with Rails before reaching the more difficult database models and controller code. With Learning Rails, you can start from the foundations of web design you already know, and then move more deeply into Ruby, objects, and database structures. This book will help you: Present web content by building an application with a basic view and a simple controller, while learning Ruby along the way Build forms and process their results, progressing from the simple to the more complex Connect forms to models by setting up a database, and use Rails' ActiveRecord to create code that maps to database structures Use Rails scaffolding to build applications from a view-centric perspective Add common web application elements such as sessions, cookies, and authentication Build applications that combine data from multiple tables Create simple but dynamic interfaces with Rails and Ajax Once you complete Learning Rails, you'll be comfortable working with the Rails web framework, and you'll be well on your way to becoming a Rails guru.","language":"en","currency":"USD","id":"0596554214","title":"Learning Rails","infoLink":"https:\/\/play.google.com\/store\/books\/details?id=h7ThRRiEjX8C&source=gbs_api","authors":["Simon St. Laurent","Edd Dumbill"]},{"pageCount":831,"thumbnail":"http:\/\/books.google.com\/books\/content?id=MgNmy8PIeyQC&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api","price":151.2,"subtitle":null,"description":"Handbook of Neuroevolution Through Erlang presents both the theory behind, and the methodology of, developing a neuroevolutionary-based computational intelligence system using Erlang. With a foreword written by Joe Armstrong, this handbook offers an extensive tutorial for creating a state of the art Topology and Weight Evolving Artificial Neural Network (TWEANN) platform. In a step-by-step format, the reader is guided from a single simulated neuron to a complete system. By following these steps, the reader will be able to use novel technology to build a TWEANN system, which can be applied to Artificial Life simulation, and Forex trading. Because of Erlang\u2019s architecture, it perfectly matches that of evolutionary and neurocomptational systems. As a programming language, it is a concurrent, message passing paradigm which allows the developers to make full use of the multi-core & multi-cpu systems. Handbook of Neuroevolution Through Erlang explains how to leverage Erlang\u2019s features in the field of machine learning, and the system\u2019s real world applications, ranging from algorithmic financial trading to artificial life and robotics.","language":"en","currency":"USD","id":"1461444632","title":"Handbook of Neuroevolution Through Erlang","infoLink":"https:\/\/play.google.com\/store\/books\/details?id=MgNmy8PIeyQC&source=gbs_api","authors":["Gene I. Sher"]},{"pageCount":400,"thumbnail":"http:\/\/books.google.com\/books\/content?id=SJHvCgAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api","price":17.27,"subtitle":null,"description":"The Go Programming Language is the authoritative resource for any programmer who wants to learn Go. It shows how to write clear and idiomatic Go to solve real-world problems. The book does not assume prior knowledge of Go nor experience with any specific language, so you\u2019ll find it accessible whether you\u2019re most comfortable with JavaScript, Ruby, Python, Java, or C++. The first chapter is a tutorial on the basic concepts of Go, introduced through programs for file I\/O and text processing, simple graphics, and web clients and servers. Early chapters cover the structural elements of Go programs: syntax, control flow, data types, and the organization of a program into packages, files, and functions. The examples illustrate many packages from the standard library and show how to create new ones of your own. Later chapters explain the package mechanism in more detail, and how to build, test, and maintain projects using the go tool. The chapters on methods and interfaces introduce Go\u2019s unconventional approach to object-oriented programming, in which methods can be declared on any type and interfaces are implicitly satisfied. They explain the key principles of encapsulation, composition, and substitutability using realistic examples. Two chapters on concurrency present in-depth approaches to this increasingly important topic. The first, which covers the basic mechanisms of goroutines and channels, illustrates the style known as communicating sequential processes for which Go is renowned. The second covers more traditional aspects of concurrency with shared variables. These chapters provide a solid foundation for programmers encountering concurrency for the first time. The final two chapters explore lower-level features of Go. One covers the art of metaprogramming using reflection. The other shows how to use the unsafe package to step outside the type system for special situations, and how to use the cgo tool to create Go bindings for C libraries. The book features hundreds of interesting and practical examples of well-written Go code that cover the whole language, its most important packages, and a wide range of applications. Each chapter has exercises to test your understanding and explore extensions and alternatives. Source code is freely available for download from http:\/\/gopl.io\/ and may be conveniently fetched, built, and installed using the go get command.","language":"en","currency":"USD","id":"0134190564","title":"The Go Programming Language","infoLink":"https:\/\/play.google.com\/store\/books\/details?id=SJHvCgAAQBAJ&source=gbs_api","authors":["Alan A. A. Donovan","Brian W. Kernighan"]},{"pageCount":608,"thumbnail":"http:\/\/books.google.com\/books\/content?id=Idi8DwAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api","price":12.64,"subtitle":"Learn to code in Python and kickstart your career in software development or data science","description":"More than just a Python guide for beginners, The Python Workshop takes you through the full spectrum of basic to advanced topics, equipping you with the skills you need to get started with data science and more. Filled with practical step-by-step examples and interactive exercises, you'll learn by doing as you grow your new Python skillset.","language":"en","currency":"USD","id":"1838984534","title":"The The Python Workshop","infoLink":"https:\/\/play.google.com\/store\/books\/details?id=Idi8DwAAQBAJ&source=gbs_api","authors":["Andrew Bird","Dr Lau Cher Han","Mario Corchero JimÃ©nez","Graham Lee","Corey Wade"]},{"pageCount":null,"thumbnail":"http:\/\/books.google.com\/books\/content?id=LhOlDwAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api","price":30.39,"subtitle":"your journey to mastery, 20th Anniversary Edition","description":"\u201COne of the most significant books in my life.\u201D \u2013Obie Fernandez, Author, The Rails Way \u201CTwenty years ago, the first edition of The Pragmatic Programmer completely changed the trajectory of my career. This new edition could do the same for yours.\u201D \u2013Mike Cohn, Author of Succeeding with Agile, Agile Estimating and Planning, and User Stories Applied \u201C. . . filled with practical advice, both technical and professional, that will serve you and your projects well for years to come.\u201D \u2013Andrea Goulet, CEO, Corgibytes, Founder, LegacyCode.Rocks \u201C. . . lightning does strike twice, and this book is proof.\u201D \u2013VM (Vicky) Brasseur, Director of Open Source Strategy, Juniper Networks The Pragmatic Programmer is one of those rare tech books you\u2019ll read, re-read, and read again over the years. Whether you\u2019re new to the field or an experienced practitioner, you\u2019ll come away with fresh insights each and every time. Dave Thomas and Andy Hunt wrote the first edition of this influential book in 1999 to help their clients create better software and rediscover the joy of coding. These lessons have helped a generation of programmers examine the very essence of software development, independent of any particular language, framework, or methodology, and the Pragmatic philosophy has spawned hundreds of books, screencasts, and audio books, as well as thousands of careers and success stories. Now, twenty years later, this new edition re-examines what it means to be a modern programmer. Topics range from personal responsibility and career development to architectural techniques for keeping your code flexible and easy to adapt and reuse. Read this book, and you\u2019ll learn how to: Fight software rot Learn continuously Avoid the trap of duplicating knowledge Write flexible, dynamic, and adaptable code Harness the power of basic tools Avoid programming by coincidence Learn real requirements Solve the underlying problems of concurrent code Guard against security vulnerabilities Build teams of Pragmatic Programmers Take responsibility for your work and career Test ruthlessly and effectively, including property-based testing Implement the Pragmatic Starter Kit Delight your users Written as a series of self-contained sections and filled with classic and fresh anecdotes, thoughtful examples, and interesting analogies, The Pragmatic Programmer illustrates the best approaches and major pitfalls of many different aspects of software development. Whether you\u2019re a new coder, an experienced programmer, or a manager responsible for software projects, use these lessons daily, and you\u2019ll quickly see improvements in personal productivity, accuracy, and job satisfaction. You\u2019ll learn skills and develop habits and attitudes that form the foundation for long-term success in your career. You\u2019ll become a Pragmatic Programmer. Register your book for convenient access to downloads, updates, and\/or corrections as they become available. See inside book for details.","language":"en","currency":"USD","id":"0135956919","title":"The Pragmatic Programmer","infoLink":"https:\/\/play.google.com\/store\/books\/details?id=LhOlDwAAQBAJ&source=gbs_api","authors":["David Thomas","Andrew Hunt"]},{"pageCount":300,"thumbnail":"http:\/\/books.google.com\/books\/content?id=459MDwAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api","price":14.17,"subtitle":"The History of Our Future","description":"Network revolutions of the past have shaped the present and set the stage for the revolution we are experiencing today In an era of seemingly instant change, it's easy to think that today's revolutions\u2014in communications, business, and many areas of daily life\u2014are unprecedented. Today's changes may be new and may be happening faster than ever before. But our ancestors at times were just as bewildered by rapid upheavals in what we now call \u201Cnetworks\u201D\u2014the physical links that bind any society together. In this fascinating book, former FCC chairman Tom Wheeler brings to life the two great network revolutions of the past and uses them to help put in perspective the confusion, uncertainty, and even excitement most people face today. The first big network revolution was the invention of movable-type printing in the fifteenth century. This book, its millions of predecessors, and even such broad trends as the Reformation, the Renaissance, and the multiple scientific revolutions of the past 500 years would not have been possible without that one invention. The second revolution came with the invention of the telegraph early in the nineteenth century. Never before had people been able to communicate over long distances faster than a horse could travel. Along with the development of the world's first high-speed network\u2014the railroad\u2014the telegraph upended centuries of stability and literally redrew the map of the world. Wheeler puts these past revolutions into the perspective of today, when rapid-fire changes in networking are upending the nature of work, personal privacy, education, the media, and nearly every other aspect of modern life. But he doesn't leave it there. Outlining \u201CWhat's Next,\u201D he describes how artificial intelligence, virtual reality, blockchain, and the need for cybersecurity are laying the foundation for a third network revolution.","language":"en","currency":"USD","id":"0815735332","title":"From Gutenberg to Google","infoLink":"https:\/\/play.google.com\/store\/books\/details?id=459MDwAAQBAJ&source=gbs_api","authors":["Tom Wheeler"]},{"pageCount":568,"thumbnail":"http:\/\/books.google.com\/books\/content?id=y83aDwAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api","price":28.49,"subtitle":"Build powerful and reliable Python web applications from scratch, 3rd Edition","description":"Learn Django 3 with four end-to-end web projects Key Features Learn Django 3 by building real-world web applications from scratch in Python, using coding best practices Integrate other technologies into your application with clear, step-by-step explanations and comprehensive example code Implement advanced functionalities like a full-text search engine, a user activity stream, or a recommendation engine Add real-time features with Django Channels and WebSockets Book Description If you want to learn the entire process of developing professional web applications with Python and Django, then this book is for you. In the process of building four professional Django projects, you will learn about Django 3 features, how to solve common web development problems, how to implement best practices, and how to successfully deploy your applications. In this book, you will build a blog application, a social image bookmarking website, an online shop, and an e-learning platform. Step-by-step guidance will teach you how to integrate popular technologies, enhance your applications with AJAX, create RESTful APIs, and set up a production environment for your Django projects. By the end of this book, you will have mastered Django 3 by building advanced web applications. What you will learn Build real-world web applications Learn Django essentials, including models, views, ORM, templates, URLs, forms, and authentication Implement advanced features such as custom model fields, custom template tags, cache, middleware, localization, and more Create complex functionalities, such as AJAX interactions, social authentication, a full-text search engine, a payment system, a CMS, a RESTful API, and more Integrate other technologies, including Redis, Celery, RabbitMQ, PostgreSQL, and Channels, into your projects Deploy Django projects in production using NGINX, uWSGI, and Daphne Who this book is for This book is intended for developers with Python knowledge who wish to learn Django in a pragmatic way. Perhaps you are completely new to Django, or you already know a little but you want to get the most out of it. This book will help you to master the most relevant areas of the framework by building practical projects from scratch. You need to have familiarity with programming concepts in order to read this book. Some previous knowledge of HTML and JavaScript is assumed.","language":"en","currency":"USD","id":"1838989323","title":"Django 3 By Example","infoLink":"https:\/\/play.google.com\/store\/books\/details?id=y83aDwAAQBAJ&source=gbs_api","authors":["Antonio MelÃ©"]},{"pageCount":320,"thumbnail":"http:\/\/books.google.com\/books\/content?id=ZA9QDwAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api","price":32.99,"subtitle":"Languages That Are Shaping the Future","description":"Great programmers aren't born--they're made. The industry is moving from object-oriented languages to functional languages, and you need to commit to radical improvement. New programming languages arm you with the tools and idioms you need to refine your craft. While other language primers take you through basic installation and \"Hello, World,\" we aim higher. Each language in Seven More Languages in Seven Weeks will take you on a step-by-step journey through the most important paradigms of our time. You'll learn seven exciting languages: Lua, Factor, Elixir, Elm, Julia, MiniKanren, and Idris. Learn from the award-winning programming series that inspired the Elixir language. Hear how other programmers across broadly different communities solve problems important enough to compel language development. Expand your perspective, and learn to solve multicore and distribution problems. In each language, you'll solve a non-trivial problem, using the techniques that make that language special. Write a fully functional game in Elm, without a single callback, that compiles to JavaScript so you can deploy it in any browser. Write a logic program in Clojure using a programming model, MiniKanren, that is as powerful as Prolog but much better at interacting with the outside world. Build a distributed program in Elixir with Lisp-style macros, rich Ruby-like syntax, and the richness of the Erlang virtual machine. Build your own object layer in Lua, a statistical program in Julia, a proof in code with Idris, and a quiz game in Factor. When you're done, you'll have written programs in five different programming paradigms that were written on three different continents. You'll have explored four languages on the leading edge, invented in the past five years, and three more radically different languages, each with something significant to teach you.","language":"en","currency":"USD","id":"1680504746","title":"Seven More Languages in Seven Weeks","infoLink":"https:\/\/play.google.com\/store\/books\/details?id=ZA9QDwAAQBAJ&source=gbs_api","authors":["Bruce Tate","Ian Dees","Frederic Daoud","Jack Moffitt"]},{"pageCount":488,"thumbnail":"http:\/\/books.google.com\/books\/content?id=PgK1GbyiiDUC&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api","price":17.27,"subtitle":"The Definitive Guide","description":"Of all the Ajax-specific frameworks that have popped up in recent years, one clearly stands out as the industrial strength solution. Dojo is not just another JavaScript toolkit\u2014it's the JavaScript toolkit\u2014and Dojo: The Definitive Guide demonstrates how to tame Dojo's extensive library of utilities so that you can build rich and responsive web applications like never before. Dojo founder Alex Russell gives a foreword that explains the \"why\" of Dojo and of this book. Dojo provides an end-to-end solution for development in the browser, including everything from the core JavaScript library and turnkey widgets to build tools and a testing framework. Its vibrant open source community keeps adding to Dojo's arsenal, and this book provides an ideal companion to Dojo's official documentation. Dojo: the Definitive Guide gives you the most thorough overview of this toolkit available, showing you everything from how to create complex layouts and form controls closely resembling those found in the most advanced desktop applications with stock widgets, to advanced JavaScript idioms to AJAX and advanced communication transports. With this definitive reference you get: Get a concise introduction to Dojo that's good for all 1.x versions Well-explained examples, with scores of tested code samples, that let you see Dojo in action A comprehensive reference to Dojo's standard JavaScript library (including fundamental utilities in Base, Dojo's tiny but powerful kernel) that you'll wonder how you ever lived without An extensive look at additional Core features, such as animations, drag-and-drop, back-button handling, animations like wipe and slide, and more Exhaustive coverage of out-of-the-box Dijits (Dojo widgets) as well as definitive coverage on how to create your own, either from scratch or building on existing ones An itemized inventory of DojoX subprojects, the build tools, and the DOH, Dojo's unit-testing framework that you can use with Dojo\u2014or anywhere else If you're a DHTML-toting web developer, you need to read this book\u2014whether you're a one-person operation or part of an organization employing scores of developers. Dojo packs the standard JavaScript library you've always wanted, and Dojo: The Definitive Guide helps you transform your ideas into working applications quickly by leveraging design concepts you already know.","language":"en","currency":"USD","id":"059655172X","title":"Dojo: The Definitive Guide","infoLink":"https:\/\/play.google.com\/store\/books\/details?id=PgK1GbyiiDUC&source=gbs_api","authors":["Matthew A. Russell"]},{"pageCount":178,"thumbnail":"http:\/\/books.google.com\/books\/content?id=uqoiy8Qk4WsC&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api","price":7.99,"subtitle":"Extensible Markup Language","description":"XML, the Extensible Markup Language, is everywhere: the syntax of choice for newly designed document formats across almost all computer applications. Now used daily by developers, XML is living up to its reputation as one of the most important developments in document interchange in the history of computing. A perennial bestseller, the handy XML Pocket Reference from O'Reilly has been revised once again to give you quick access to the latest goods. In addition to its comprehensive look at XML, this third edition has been updated with new material on Namespaces and XML Schema--considered among the most important elements in current XML use--along with RELAX NG and Schematron, additional powerful tools for describing XML document structures. Like other titles in O'Reilly's Pocket Reference series, the XML Pocket Reference, 3rd Edition features a well-organized format that gets right to the point. As a result, it's already won over the allegiance of developers everywhere. If you need XML answers quick and on the fly, this compact book is most definitely the book for you.","language":"en","currency":"USD","id":"9781449379117","title":"XML Pocket Reference","infoLink":"https:\/\/play.google.com\/store\/books\/details?id=uqoiy8Qk4WsC&source=gbs_api","authors":["Simon St. Laurent","Michael Fitzgerald"]},{"pageCount":816,"thumbnail":"http:\/\/books.google.com\/books\/content?id=ZZ_6DwAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api","price":19.79,"subtitle":"A deep dive into distributed ledgers, consensus protocols, smart contracts, DApps, cryptocurrencies, Ethereum, and more, 3rd Edition","description":"Mastering Blockchain, Third Edition is the blockchain bible to equip you with extensive knowledge of distributed ledgers, cryptocurrencies, smart contracts, consensus algorithms, cryptography and blockchain platforms such as Ethereum, Bitcoin, and many more.","language":"en","currency":"USD","id":"1839211377","title":"Mastering Blockchain","infoLink":"https:\/\/play.google.com\/store\/books\/details?id=ZZ_6DwAAQBAJ&source=gbs_api","authors":["Imran Bashir"]},{"pageCount":304,"thumbnail":"http:\/\/books.google.com\/books\/content?id=prtSDwAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api","price":42.99,"subtitle":null,"description":"Drowning in unnecessary complexity, unmanaged state, and tangles of spaghetti code? In the best tradition of Lisp, Clojure gets out of your way so you can focus on expressing simple solutions to hard problems. Clojure cuts through complexity by providing a set of composable tools--immutable data, functions, macros, and the interactive REPL. Written by members of the Clojure core team, this book is the essential, definitive guide to Clojure. This new edition includes information on all the newest features of Clojure, such as transducers and specs. Clojure joins the flexibility and agility of Lisp with the reach, stability, and performance of Java. Combine Clojure's tools for maximum effectiveness as you work with immutable data, functional programming, and safe concurrency to write programs that solve real-world problems. Start by reading and understanding Clojure syntax and see how Clojure is evaluated. From there, find out about the sequence abstraction, which combines immutable collections with functional programming to create truly reusable data transformation code. Clojure is a functional language; learn how to write programs in a functional style, and when and how to use recursion to your advantage. Discover Clojure's unique approach to state and identity, techniques for polymorphism and open systems using multimethods and protocols, and how to leverage Clojure's metaprogramming capabilities via macros. Finally, put all the pieces together in a real program. New to this edition is coverage of Clojure's spec library, one of the most interesting new features of Clojure for describing both data and functions. You can use Clojure spec to validate data, destructure data, explain invalid data, and generate large numbers of tests to verify the correctness of your code. With this book, you'll learn how to think in Clojure, and how to take advantage of its combined strengths to build powerful programs quickly. What You Need: Java 6 or higher Clojure 1.9","language":"en","currency":"USD","id":"1680505726","title":"Programming Clojure","infoLink":"https:\/\/play.google.com\/store\/books\/details?id=prtSDwAAQBAJ&source=gbs_api","authors":["Alex Miller","Stuart Halloway","Aaron Bedra"]},{"pageCount":448,"thumbnail":"http:\/\/books.google.com\/books\/content?id=h7ThRRiEjX8C&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api","price":15.39,"subtitle":null,"description":"While most books written about Rails cater to programmers looking for information on data structures, Learning Rails targets web developers whose programming experience is tied directly to the Web. Rather than begin with the inner layers of a Rails web application--the models and controllers--this unique book approaches Rails development from the outer layer: the application interface. You'll learn how to create something visible with Rails before reaching the more difficult database models and controller code. With Learning Rails, you can start from the foundations of web design you already know, and then move more deeply into Ruby, objects, and database structures. This book will help you: Present web content by building an application with a basic view and a simple controller, while learning Ruby along the way Build forms and process their results, progressing from the simple to the more complex Connect forms to models by setting up a database, and use Rails' ActiveRecord to create code that maps to database structures Use Rails scaffolding to build applications from a view-centric perspective Add common web application elements such as sessions, cookies, and authentication Build applications that combine data from multiple tables Create simple but dynamic interfaces with Rails and Ajax Once you complete Learning Rails, you'll be comfortable working with the Rails web framework, and you'll be well on your way to becoming a Rails guru.","language":"en","currency":"USD","id":"0596554214","title":"Learning Rails","infoLink":"https:\/\/play.google.com\/store\/books\/details?id=h7ThRRiEjX8C&source=gbs_api","authors":["Simon St. Laurent","Edd Dumbill"]},{"pageCount":831,"thumbnail":"http:\/\/books.google.com\/books\/content?id=MgNmy8PIeyQC&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api","price":151.2,"subtitle":null,"description":"Handbook of Neuroevolution Through Erlang presents both the theory behind, and the methodology of, developing a neuroevolutionary-based computational intelligence system using Erlang. With a foreword written by Joe Armstrong, this handbook offers an extensive tutorial for creating a state of the art Topology and Weight Evolving Artificial Neural Network (TWEANN) platform. In a step-by-step format, the reader is guided from a single simulated neuron to a complete system. By following these steps, the reader will be able to use novel technology to build a TWEANN system, which can be applied to Artificial Life simulation, and Forex trading. Because of Erlang\u2019s architecture, it perfectly matches that of evolutionary and neurocomptational systems. As a programming language, it is a concurrent, message passing paradigm which allows the developers to make full use of the multi-core & multi-cpu systems. Handbook of Neuroevolution Through Erlang explains how to leverage Erlang\u2019s features in the field of machine learning, and the system\u2019s real world applications, ranging from algorithmic financial trading to artificial life and robotics.","language":"en","currency":"USD","id":"1461444632","title":"Handbook of Neuroevolution Through Erlang","infoLink":"https:\/\/play.google.com\/store\/books\/details?id=MgNmy8PIeyQC&source=gbs_api","authors":["Gene I. Sher"]},{"pageCount":400,"thumbnail":"http:\/\/books.google.com\/books\/content?id=SJHvCgAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api","price":17.27,"subtitle":null,"description":"The Go Programming Language is the authoritative resource for any programmer who wants to learn Go. It shows how to write clear and idiomatic Go to solve real-world problems. The book does not assume prior knowledge of Go nor experience with any specific language, so you\u2019ll find it accessible whether you\u2019re most comfortable with JavaScript, Ruby, Python, Java, or C++. The first chapter is a tutorial on the basic concepts of Go, introduced through programs for file I\/O and text processing, simple graphics, and web clients and servers. Early chapters cover the structural elements of Go programs: syntax, control flow, data types, and the organization of a program into packages, files, and functions. The examples illustrate many packages from the standard library and show how to create new ones of your own. Later chapters explain the package mechanism in more detail, and how to build, test, and maintain projects using the go tool. The chapters on methods and interfaces introduce Go\u2019s unconventional approach to object-oriented programming, in which methods can be declared on any type and interfaces are implicitly satisfied. They explain the key principles of encapsulation, composition, and substitutability using realistic examples. Two chapters on concurrency present in-depth approaches to this increasingly important topic. The first, which covers the basic mechanisms of goroutines and channels, illustrates the style known as communicating sequential processes for which Go is renowned. The second covers more traditional aspects of concurrency with shared variables. These chapters provide a solid foundation for programmers encountering concurrency for the first time. The final two chapters explore lower-level features of Go. One covers the art of metaprogramming using reflection. The other shows how to use the unsafe package to step outside the type system for special situations, and how to use the cgo tool to create Go bindings for C libraries. The book features hundreds of interesting and practical examples of well-written Go code that cover the whole language, its most important packages, and a wide range of applications. Each chapter has exercises to test your understanding and explore extensions and alternatives. Source code is freely available for download from http:\/\/gopl.io\/ and may be conveniently fetched, built, and installed using the go get command.","language":"en","currency":"USD","id":"0134190564","title":"The Go Programming Language","infoLink":"https:\/\/play.google.com\/store\/books\/details?id=SJHvCgAAQBAJ&source=gbs_api","authors":["Alan A. A. Donovan","Brian W. Kernighan"]},{"pageCount":608,"thumbnail":"http:\/\/books.google.com\/books\/content?id=Idi8DwAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api","price":12.64,"subtitle":"Learn to code in Python and kickstart your career in software development or data science","description":"More than just a Python guide for beginners, The Python Workshop takes you through the full spectrum of basic to advanced topics, equipping you with the skills you need to get started with data science and more. Filled with practical step-by-step examples and interactive exercises, you'll learn by doing as you grow your new Python skillset.","language":"en","currency":"USD","id":"1838984534","title":"The The Python Workshop","infoLink":"https:\/\/play.google.com\/store\/books\/details?id=Idi8DwAAQBAJ&source=gbs_api","authors":["Andrew Bird","Dr Lau Cher Han","Mario Corchero JimÃ©nez","Graham Lee","Corey Wade"]},{"pageCount":null,"thumbnail":"http:\/\/books.google.com\/books\/content?id=LhOlDwAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api","price":30.39,"subtitle":"your journey to mastery, 20th Anniversary Edition","description":"\u201COne of the most significant books in my life.\u201D \u2013Obie Fernandez, Author, The Rails Way \u201CTwenty years ago, the first edition of The Pragmatic Programmer completely changed the trajectory of my career. This new edition could do the same for yours.\u201D \u2013Mike Cohn, Author of Succeeding with Agile, Agile Estimating and Planning, and User Stories Applied \u201C. . . filled with practical advice, both technical and professional, that will serve you and your projects well for years to come.\u201D \u2013Andrea Goulet, CEO, Corgibytes, Founder, LegacyCode.Rocks \u201C. . . lightning does strike twice, and this book is proof.\u201D \u2013VM (Vicky) Brasseur, Director of Open Source Strategy, Juniper Networks The Pragmatic Programmer is one of those rare tech books you\u2019ll read, re-read, and read again over the years. Whether you\u2019re new to the field or an experienced practitioner, you\u2019ll come away with fresh insights each and every time. Dave Thomas and Andy Hunt wrote the first edition of this influential book in 1999 to help their clients create better software and rediscover the joy of coding. These lessons have helped a generation of programmers examine the very essence of software development, independent of any particular language, framework, or methodology, and the Pragmatic philosophy has spawned hundreds of books, screencasts, and audio books, as well as thousands of careers and success stories. Now, twenty years later, this new edition re-examines what it means to be a modern programmer. Topics range from personal responsibility and career development to architectural techniques for keeping your code flexible and easy to adapt and reuse. Read this book, and you\u2019ll learn how to: Fight software rot Learn continuously Avoid the trap of duplicating knowledge Write flexible, dynamic, and adaptable code Harness the power of basic tools Avoid programming by coincidence Learn real requirements Solve the underlying problems of concurrent code Guard against security vulnerabilities Build teams of Pragmatic Programmers Take responsibility for your work and career Test ruthlessly and effectively, including property-based testing Implement the Pragmatic Starter Kit Delight your users Written as a series of self-contained sections and filled with classic and fresh anecdotes, thoughtful examples, and interesting analogies, The Pragmatic Programmer illustrates the best approaches and major pitfalls of many different aspects of software development. Whether you\u2019re a new coder, an experienced programmer, or a manager responsible for software projects, use these lessons daily, and you\u2019ll quickly see improvements in personal productivity, accuracy, and job satisfaction. You\u2019ll learn skills and develop habits and attitudes that form the foundation for long-term success in your career. You\u2019ll become a Pragmatic Programmer. Register your book for convenient access to downloads, updates, and\/or corrections as they become available. See inside book for details.","language":"en","currency":"USD","id":"0135956919","title":"The Pragmatic Programmer","infoLink":"https:\/\/play.google.com\/store\/books\/details?id=LhOlDwAAQBAJ&source=gbs_api","authors":["David Thomas","Andrew Hunt"]},{"pageCount":300,"thumbnail":"http:\/\/books.google.com\/books\/content?id=459MDwAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api","price":14.17,"subtitle":"The History of Our Future","description":"Network revolutions of the past have shaped the present and set the stage for the revolution we are experiencing today In an era of seemingly instant change, it's easy to think that today's revolutions\u2014in communications, business, and many areas of daily life\u2014are unprecedented. Today's changes may be new and may be happening faster than ever before. But our ancestors at times were just as bewildered by rapid upheavals in what we now call \u201Cnetworks\u201D\u2014the physical links that bind any society together. In this fascinating book, former FCC chairman Tom Wheeler brings to life the two great network revolutions of the past and uses them to help put in perspective the confusion, uncertainty, and even excitement most people face today. The first big network revolution was the invention of movable-type printing in the fifteenth century. This book, its millions of predecessors, and even such broad trends as the Reformation, the Renaissance, and the multiple scientific revolutions of the past 500 years would not have been possible without that one invention. The second revolution came with the invention of the telegraph early in the nineteenth century. Never before had people been able to communicate over long distances faster than a horse could travel. Along with the development of the world's first high-speed network\u2014the railroad\u2014the telegraph upended centuries of stability and literally redrew the map of the world. Wheeler puts these past revolutions into the perspective of today, when rapid-fire changes in networking are upending the nature of work, personal privacy, education, the media, and nearly every other aspect of modern life. But he doesn't leave it there. Outlining \u201CWhat's Next,\u201D he describes how artificial intelligence, virtual reality, blockchain, and the need for cybersecurity are laying the foundation for a third network revolution.","language":"en","currency":"USD","id":"0815735332","title":"From Gutenberg to Google","infoLink":"https:\/\/play.google.com\/store\/books\/details?id=459MDwAAQBAJ&source=gbs_api","authors":["Tom Wheeler"]},{"pageCount":568,"thumbnail":"http:\/\/books.google.com\/books\/content?id=y83aDwAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api","price":28.49,"subtitle":"Build powerful and reliable Python web applications from scratch, 3rd Edition","description":"Learn Django 3 with four end-to-end web projects Key Features Learn Django 3 by building real-world web applications from scratch in Python, using coding best practices Integrate other technologies into your application with clear, step-by-step explanations and comprehensive example code Implement advanced functionalities like a full-text search engine, a user activity stream, or a recommendation engine Add real-time features with Django Channels and WebSockets Book Description If you want to learn the entire process of developing professional web applications with Python and Django, then this book is for you. In the process of building four professional Django projects, you will learn about Django 3 features, how to solve common web development problems, how to implement best practices, and how to successfully deploy your applications. In this book, you will build a blog application, a social image bookmarking website, an online shop, and an e-learning platform. Step-by-step guidance will teach you how to integrate popular technologies, enhance your applications with AJAX, create RESTful APIs, and set up a production environment for your Django projects. By the end of this book, you will have mastered Django 3 by building advanced web applications. What you will learn Build real-world web applications Learn Django essentials, including models, views, ORM, templates, URLs, forms, and authentication Implement advanced features such as custom model fields, custom template tags, cache, middleware, localization, and more Create complex functionalities, such as AJAX interactions, social authentication, a full-text search engine, a payment system, a CMS, a RESTful API, and more Integrate other technologies, including Redis, Celery, RabbitMQ, PostgreSQL, and Channels, into your projects Deploy Django projects in production using NGINX, uWSGI, and Daphne Who this book is for This book is intended for developers with Python knowledge who wish to learn Django in a pragmatic way. Perhaps you are completely new to Django, or you already know a little but you want to get the most out of it. This book will help you to master the most relevant areas of the framework by building practical projects from scratch. You need to have familiarity with programming concepts in order to read this book. Some previous knowledge of HTML and JavaScript is assumed.","language":"en","currency":"USD","id":"1838989323","title":"Django 3 By Example","infoLink":"https:\/\/play.google.com\/store\/books\/details?id=y83aDwAAQBAJ&source=gbs_api","authors":["Antonio MelÃ©"]},{"pageCount":320,"thumbnail":"http:\/\/books.google.com\/books\/content?id=ZA9QDwAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api","price":32.99,"subtitle":"Languages That Are Shaping the Future","description":"Great programmers aren't born--they're made. The industry is moving from object-oriented languages to functional languages, and you need to commit to radical improvement. New programming languages arm you with the tools and idioms you need to refine your craft. While other language primers take you through basic installation and \"Hello, World,\" we aim higher. Each language in Seven More Languages in Seven Weeks will take you on a step-by-step journey through the most important paradigms of our time. You'll learn seven exciting languages: Lua, Factor, Elixir, Elm, Julia, MiniKanren, and Idris. Learn from the award-winning programming series that inspired the Elixir language. Hear how other programmers across broadly different communities solve problems important enough to compel language development. Expand your perspective, and learn to solve multicore and distribution problems. In each language, you'll solve a non-trivial problem, using the techniques that make that language special. Write a fully functional game in Elm, without a single callback, that compiles to JavaScript so you can deploy it in any browser. Write a logic program in Clojure using a programming model, MiniKanren, that is as powerful as Prolog but much better at interacting with the outside world. Build a distributed program in Elixir with Lisp-style macros, rich Ruby-like syntax, and the richness of the Erlang virtual machine. Build your own object layer in Lua, a statistical program in Julia, a proof in code with Idris, and a quiz game in Factor. When you're done, you'll have written programs in five different programming paradigms that were written on three different continents. You'll have explored four languages on the leading edge, invented in the past five years, and three more radically different languages, each with something significant to teach you.","language":"en","currency":"USD","id":"1680504746","title":"Seven More Languages in Seven Weeks","infoLink":"https:\/\/play.google.com\/store\/books\/details?id=ZA9QDwAAQBAJ&source=gbs_api","authors":["Bruce Tate","Ian Dees","Frederic Daoud","Jack Moffitt"]},{"pageCount":488,"thumbnail":"http:\/\/books.google.com\/books\/content?id=PgK1GbyiiDUC&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api","price":17.27,"subtitle":"The Definitive Guide","description":"Of all the Ajax-specific frameworks that have popped up in recent years, one clearly stands out as the industrial strength solution. Dojo is not just another JavaScript toolkit\u2014it's the JavaScript toolkit\u2014and Dojo: The Definitive Guide demonstrates how to tame Dojo's extensive library of utilities so that you can build rich and responsive web applications like never before. Dojo founder Alex Russell gives a foreword that explains the \"why\" of Dojo and of this book. Dojo provides an end-to-end solution for development in the browser, including everything from the core JavaScript library and turnkey widgets to build tools and a testing framework. Its vibrant open source community keeps adding to Dojo's arsenal, and this book provides an ideal companion to Dojo's official documentation. Dojo: the Definitive Guide gives you the most thorough overview of this toolkit available, showing you everything from how to create complex layouts and form controls closely resembling those found in the most advanced desktop applications with stock widgets, to advanced JavaScript idioms to AJAX and advanced communication transports. With this definitive reference you get: Get a concise introduction to Dojo that's good for all 1.x versions Well-explained examples, with scores of tested code samples, that let you see Dojo in action A comprehensive reference to Dojo's standard JavaScript library (including fundamental utilities in Base, Dojo's tiny but powerful kernel) that you'll wonder how you ever lived without An extensive look at additional Core features, such as animations, drag-and-drop, back-button handling, animations like wipe and slide, and more Exhaustive coverage of out-of-the-box Dijits (Dojo widgets) as well as definitive coverage on how to create your own, either from scratch or building on existing ones An itemized inventory of DojoX subprojects, the build tools, and the DOH, Dojo's unit-testing framework that you can use with Dojo\u2014or anywhere else If you're a DHTML-toting web developer, you need to read this book\u2014whether you're a one-person operation or part of an organization employing scores of developers. Dojo packs the standard JavaScript library you've always wanted, and Dojo: The Definitive Guide helps you transform your ideas into working applications quickly by leveraging design concepts you already know.","language":"en","currency":"USD","id":"059655172X","title":"Dojo: The Definitive Guide","infoLink":"https:\/\/play.google.com\/store\/books\/details?id=PgK1GbyiiDUC&source=gbs_api","authors":["Matthew A. Russell"]},{"pageCount":178,"thumbnail":"http:\/\/books.google.com\/books\/content?id=uqoiy8Qk4WsC&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api","price":7.99,"subtitle":"Extensible Markup Language","description":"XML, the Extensible Markup Language, is everywhere: the syntax of choice for newly designed document formats across almost all computer applications. Now used daily by developers, XML is living up to its reputation as one of the most important developments in document interchange in the history of computing. A perennial bestseller, the handy XML Pocket Reference from O'Reilly has been revised once again to give you quick access to the latest goods. In addition to its comprehensive look at XML, this third edition has been updated with new material on Namespaces and XML Schema--considered among the most important elements in current XML use--along with RELAX NG and Schematron, additional powerful tools for describing XML document structures. Like other titles in O'Reilly's Pocket Reference series, the XML Pocket Reference, 3rd Edition features a well-organized format that gets right to the point. As a result, it's already won over the allegiance of developers everywhere. If you need XML answers quick and on the fly, this compact book is most definitely the book for you.","language":"en","currency":"USD","id":"9781449379117","title":"XML Pocket Reference","infoLink":"https:\/\/play.google.com\/store\/books\/details?id=uqoiy8Qk4WsC&source=gbs_api","authors":["Simon St. Laurent","Michael Fitzgerald"]},{"pageCount":816,"thumbnail":"http:\/\/books.google.com\/books\/content?id=ZZ_6DwAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api","price":19.79,"subtitle":"A deep dive into distributed ledgers, consensus protocols, smart contracts, DApps, cryptocurrencies, Ethereum, and more, 3rd Edition","description":"Mastering Blockchain, Third Edition is the blockchain bible to equip you with extensive knowledge of distributed ledgers, cryptocurrencies, smart contracts, consensus algorithms, cryptography and blockchain platforms such as Ethereum, Bitcoin, and many more.","language":"en","currency":"USD","id":"1839211377","title":"Mastering Blockchain","infoLink":"https:\/\/play.google.com\/store\/books\/details?id=ZZ_6DwAAQBAJ&source=gbs_api","authors":["Imran Bashir"]},{"pageCount":304,"thumbnail":"http:\/\/books.google.com\/books\/content?id=prtSDwAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api","price":42.99,"subtitle":null,"description":"Drowning in unnecessary complexity, unmanaged state, and tangles of spaghetti code? In the best tradition of Lisp, Clojure gets out of your way so you can focus on expressing simple solutions to hard problems. Clojure cuts through complexity by providing a set of composable tools--immutable data, functions, macros, and the interactive REPL. Written by members of the Clojure core team, this book is the essential, definitive guide to Clojure. This new edition includes information on all the newest features of Clojure, such as transducers and specs. Clojure joins the flexibility and agility of Lisp with the reach, stability, and performance of Java. Combine Clojure's tools for maximum effectiveness as you work with immutable data, functional programming, and safe concurrency to write programs that solve real-world problems. Start by reading and understanding Clojure syntax and see how Clojure is evaluated. From there, find out about the sequence abstraction, which combines immutable collections with functional programming to create truly reusable data transformation code. Clojure is a functional language; learn how to write programs in a functional style, and when and how to use recursion to your advantage. Discover Clojure's unique approach to state and identity, techniques for polymorphism and open systems using multimethods and protocols, and how to leverage Clojure's metaprogramming capabilities via macros. Finally, put all the pieces together in a real program. New to this edition is coverage of Clojure's spec library, one of the most interesting new features of Clojure for describing both data and functions. You can use Clojure spec to validate data, destructure data, explain invalid data, and generate large numbers of tests to verify the correctness of your code. With this book, you'll learn how to think in Clojure, and how to take advantage of its combined strengths to build powerful programs quickly. What You Need: Java 6 or higher Clojure 1.9","language":"en","currency":"USD","id":"1680505726","title":"Programming Clojure","infoLink":"https:\/\/play.google.com\/store\/books\/details?id=prtSDwAAQBAJ&source=gbs_api","authors":["Alex Miller","Stuart Halloway","Aaron Bedra"]},{"pageCount":448,"thumbnail":"http:\/\/books.google.com\/books\/content?id=h7ThRRiEjX8C&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api","price":15.39,"subtitle":null,"description":"While most books written about Rails cater to programmers looking for information on data structures, Learning Rails targets web developers whose programming experience is tied directly to the Web. Rather than begin with the inner layers of a Rails web application--the models and controllers--this unique book approaches Rails development from the outer layer: the application interface. You'll learn how to create something visible with Rails before reaching the more difficult database models and controller code. With Learning Rails, you can start from the foundations of web design you already know, and then move more deeply into Ruby, objects, and database structures. This book will help you: Present web content by building an application with a basic view and a simple controller, while learning Ruby along the way Build forms and process their results, progressing from the simple to the more complex Connect forms to models by setting up a database, and use Rails' ActiveRecord to create code that maps to database structures Use Rails scaffolding to build applications from a view-centric perspective Add common web application elements such as sessions, cookies, and authentication Build applications that combine data from multiple tables Create simple but dynamic interfaces with Rails and Ajax Once you complete Learning Rails, you'll be comfortable working with the Rails web framework, and you'll be well on your way to becoming a Rails guru.","language":"en","currency":"USD","id":"0596554214","title":"Learning Rails","infoLink":"https:\/\/play.google.com\/store\/books\/details?id=h7ThRRiEjX8C&source=gbs_api","authors":["Simon St. Laurent","Edd Dumbill"]},{"pageCount":831,"thumbnail":"http:\/\/books.google.com\/books\/content?id=MgNmy8PIeyQC&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api","price":151.2,"subtitle":null,"description":"Handbook of Neuroevolution Through Erlang presents both the theory behind, and the methodology of, developing a neuroevolutionary-based computational intelligence system using Erlang. With a foreword written by Joe Armstrong, this handbook offers an extensive tutorial for creating a state of the art Topology and Weight Evolving Artificial Neural Network (TWEANN) platform. In a step-by-step format, the reader is guided from a single simulated neuron to a complete system. By following these steps, the reader will be able to use novel technology to build a TWEANN system, which can be applied to Artificial Life simulation, and Forex trading. Because of Erlang\u2019s architecture, it perfectly matches that of evolutionary and neurocomptational systems. As a programming language, it is a concurrent, message passing paradigm which allows the developers to make full use of the multi-core & multi-cpu systems. Handbook of Neuroevolution Through Erlang explains how to leverage Erlang\u2019s features in the field of machine learning, and the system\u2019s real world applications, ranging from algorithmic financial trading to artificial life and robotics.","language":"en","currency":"USD","id":"1461444632","title":"Handbook of Neuroevolution Through Erlang","infoLink":"https:\/\/play.google.com\/store\/books\/details?id=MgNmy8PIeyQC&source=gbs_api","authors":["Gene I. Sher"]},{"pageCount":400,"thumbnail":"http:\/\/books.google.com\/books\/content?id=SJHvCgAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api","price":17.27,"subtitle":null,"description":"The Go Programming Language is the authoritative resource for any programmer who wants to learn Go. It shows how to write clear and idiomatic Go to solve real-world problems. The book does not assume prior knowledge of Go nor experience with any specific language, so you\u2019ll find it accessible whether you\u2019re most comfortable with JavaScript, Ruby, Python, Java, or C++. The first chapter is a tutorial on the basic concepts of Go, introduced through programs for file I\/O and text processing, simple graphics, and web clients and servers. Early chapters cover the structural elements of Go programs: syntax, control flow, data types, and the organization of a program into packages, files, and functions. The examples illustrate many packages from the standard library and show how to create new ones of your own. Later chapters explain the package mechanism in more detail, and how to build, test, and maintain projects using the go tool. The chapters on methods and interfaces introduce Go\u2019s unconventional approach to object-oriented programming, in which methods can be declared on any type and interfaces are implicitly satisfied. They explain the key principles of encapsulation, composition, and substitutability using realistic examples. Two chapters on concurrency present in-depth approaches to this increasingly important topic. The first, which covers the basic mechanisms of goroutines and channels, illustrates the style known as communicating sequential processes for which Go is renowned. The second covers more traditional aspects of concurrency with shared variables. These chapters provide a solid foundation for programmers encountering concurrency for the first time. The final two chapters explore lower-level features of Go. One covers the art of metaprogramming using reflection. The other shows how to use the unsafe package to step outside the type system for special situations, and how to use the cgo tool to create Go bindings for C libraries. The book features hundreds of interesting and practical examples of well-written Go code that cover the whole language, its most important packages, and a wide range of applications. Each chapter has exercises to test your understanding and explore extensions and alternatives. Source code is freely available for download from http:\/\/gopl.io\/ and may be conveniently fetched, built, and installed using the go get command.","language":"en","currency":"USD","id":"0134190564","title":"The Go Programming Language","infoLink":"https:\/\/play.google.com\/store\/books\/details?id=SJHvCgAAQBAJ&source=gbs_api","authors":["Alan A. A. Donovan","Brian W. Kernighan"]},{"pageCount":608,"thumbnail":"http:\/\/books.google.com\/books\/content?id=Idi8DwAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api","price":12.64,"subtitle":"Learn to code in Python and kickstart your career in software development or data science","description":"More than just a Python guide for beginners, The Python Workshop takes you through the full spectrum of basic to advanced topics, equipping you with the skills you need to get started with data science and more. Filled with practical step-by-step examples and interactive exercises, you'll learn by doing as you grow your new Python skillset.","language":"en","currency":"USD","id":"1838984534","title":"The The Python Workshop","infoLink":"https:\/\/play.google.com\/store\/books\/details?id=Idi8DwAAQBAJ&source=gbs_api","authors":["Andrew Bird","Dr Lau Cher Han","Mario Corchero JimÃ©nez","Graham Lee","Corey Wade"]},{"pageCount":null,"thumbnail":"http:\/\/books.google.com\/books\/content?id=LhOlDwAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api","price":30.39,"subtitle":"your journey to mastery, 20th Anniversary Edition","description":"\u201COne of the most significant books in my life.\u201D \u2013Obie Fernandez, Author, The Rails Way \u201CTwenty years ago, the first edition of The Pragmatic Programmer completely changed the trajectory of my career. This new edition could do the same for yours.\u201D \u2013Mike Cohn, Author of Succeeding with Agile, Agile Estimating and Planning, and User Stories Applied \u201C. . . filled with practical advice, both technical and professional, that will serve you and your projects well for years to come.\u201D \u2013Andrea Goulet, CEO, Corgibytes, Founder, LegacyCode.Rocks \u201C. . . lightning does strike twice, and this book is proof.\u201D \u2013VM (Vicky) Brasseur, Director of Open Source Strategy, Juniper Networks The Pragmatic Programmer is one of those rare tech books you\u2019ll read, re-read, and read again over the years. Whether you\u2019re new to the field or an experienced practitioner, you\u2019ll come away with fresh insights each and every time. Dave Thomas and Andy Hunt wrote the first edition of this influential book in 1999 to help their clients create better software and rediscover the joy of coding. These lessons have helped a generation of programmers examine the very essence of software development, independent of any particular language, framework, or methodology, and the Pragmatic philosophy has spawned hundreds of books, screencasts, and audio books, as well as thousands of careers and success stories. Now, twenty years later, this new edition re-examines what it means to be a modern programmer. Topics range from personal responsibility and career development to architectural techniques for keeping your code flexible and easy to adapt and reuse. Read this book, and you\u2019ll learn how to: Fight software rot Learn continuously Avoid the trap of duplicating knowledge Write flexible, dynamic, and adaptable code Harness the power of basic tools Avoid programming by coincidence Learn real requirements Solve the underlying problems of concurrent code Guard against security vulnerabilities Build teams of Pragmatic Programmers Take responsibility for your work and career Test ruthlessly and effectively, including property-based testing Implement the Pragmatic Starter Kit Delight your users Written as a series of self-contained sections and filled with classic and fresh anecdotes, thoughtful examples, and interesting analogies, The Pragmatic Programmer illustrates the best approaches and major pitfalls of many different aspects of software development. Whether you\u2019re a new coder, an experienced programmer, or a manager responsible for software projects, use these lessons daily, and you\u2019ll quickly see improvements in personal productivity, accuracy, and job satisfaction. You\u2019ll learn skills and develop habits and attitudes that form the foundation for long-term success in your career. You\u2019ll become a Pragmatic Programmer. Register your book for convenient access to downloads, updates, and\/or corrections as they become available. See inside book for details.","language":"en","currency":"USD","id":"0135956919","title":"The Pragmatic Programmer","infoLink":"https:\/\/play.google.com\/store\/books\/details?id=LhOlDwAAQBAJ&source=gbs_api","authors":["David Thomas","Andrew Hunt"]},{"pageCount":300,"thumbnail":"http:\/\/books.google.com\/books\/content?id=459MDwAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api","price":14.17,"subtitle":"The History of Our Future","description":"Network revolutions of the past have shaped the present and set the stage for the revolution we are experiencing today In an era of seemingly instant change, it's easy to think that today's revolutions\u2014in communications, business, and many areas of daily life\u2014are unprecedented. Today's changes may be new and may be happening faster than ever before. But our ancestors at times were just as bewildered by rapid upheavals in what we now call \u201Cnetworks\u201D\u2014the physical links that bind any society together. In this fascinating book, former FCC chairman Tom Wheeler brings to life the two great network revolutions of the past and uses them to help put in perspective the confusion, uncertainty, and even excitement most people face today. The first big network revolution was the invention of movable-type printing in the fifteenth century. This book, its millions of predecessors, and even such broad trends as the Reformation, the Renaissance, and the multiple scientific revolutions of the past 500 years would not have been possible without that one invention. The second revolution came with the invention of the telegraph early in the nineteenth century. Never before had people been able to communicate over long distances faster than a horse could travel. Along with the development of the world's first high-speed network\u2014the railroad\u2014the telegraph upended centuries of stability and literally redrew the map of the world. Wheeler puts these past revolutions into the perspective of today, when rapid-fire changes in networking are upending the nature of work, personal privacy, education, the media, and nearly every other aspect of modern life. But he doesn't leave it there. Outlining \u201CWhat's Next,\u201D he describes how artificial intelligence, virtual reality, blockchain, and the need for cybersecurity are laying the foundation for a third network revolution.","language":"en","currency":"USD","id":"0815735332","title":"From Gutenberg to Google","infoLink":"https:\/\/play.google.com\/store\/books\/details?id=459MDwAAQBAJ&source=gbs_api","authors":["Tom Wheeler"]},{"pageCount":568,"thumbnail":"http:\/\/books.google.com\/books\/content?id=y83aDwAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api","price":28.49,"subtitle":"Build powerful and reliable Python web applications from scratch, 3rd Edition","description":"Learn Django 3 with four end-to-end web projects Key Features Learn Django 3 by building real-world web applications from scratch in Python, using coding best practices Integrate other technologies into your application with clear, step-by-step explanations and comprehensive example code Implement advanced functionalities like a full-text search engine, a user activity stream, or a recommendation engine Add real-time features with Django Channels and WebSockets Book Description If you want to learn the entire process of developing professional web applications with Python and Django, then this book is for you. In the process of building four professional Django projects, you will learn about Django 3 features, how to solve common web development problems, how to implement best practices, and how to successfully deploy your applications. In this book, you will build a blog application, a social image bookmarking website, an online shop, and an e-learning platform. Step-by-step guidance will teach you how to integrate popular technologies, enhance your applications with AJAX, create RESTful APIs, and set up a production environment for your Django projects. By the end of this book, you will have mastered Django 3 by building advanced web applications. What you will learn Build real-world web applications Learn Django essentials, including models, views, ORM, templates, URLs, forms, and authentication Implement advanced features such as custom model fields, custom template tags, cache, middleware, localization, and more Create complex functionalities, such as AJAX interactions, social authentication, a full-text search engine, a payment system, a CMS, a RESTful API, and more Integrate other technologies, including Redis, Celery, RabbitMQ, PostgreSQL, and Channels, into your projects Deploy Django projects in production using NGINX, uWSGI, and Daphne Who this book is for This book is intended for developers with Python knowledge who wish to learn Django in a pragmatic way. Perhaps you are completely new to Django, or you already know a little but you want to get the most out of it. This book will help you to master the most relevant areas of the framework by building practical projects from scratch. You need to have familiarity with programming concepts in order to read this book. Some previous knowledge of HTML and JavaScript is assumed.","language":"en","currency":"USD","id":"1838989323","title":"Django 3 By Example","infoLink":"https:\/\/play.google.com\/store\/books\/details?id=y83aDwAAQBAJ&source=gbs_api","authors":["Antonio MelÃ©"]},{"pageCount":320,"thumbnail":"http:\/\/books.google.com\/books\/content?id=ZA9QDwAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api","price":32.99,"subtitle":"Languages That Are Shaping the Future","description":"Great programmers aren't born--they're made. The industry is moving from object-oriented languages to functional languages, and you need to commit to radical improvement. New programming languages arm you with the tools and idioms you need to refine your craft. While other language primers take you through basic installation and \"Hello, World,\" we aim higher. Each language in Seven More Languages in Seven Weeks will take you on a step-by-step journey through the most important paradigms of our time. You'll learn seven exciting languages: Lua, Factor, Elixir, Elm, Julia, MiniKanren, and Idris. Learn from the award-winning programming series that inspired the Elixir language. Hear how other programmers across broadly different communities solve problems important enough to compel language development. Expand your perspective, and learn to solve multicore and distribution problems. In each language, you'll solve a non-trivial problem, using the techniques that make that language special. Write a fully functional game in Elm, without a single callback, that compiles to JavaScript so you can deploy it in any browser. Write a logic program in Clojure using a programming model, MiniKanren, that is as powerful as Prolog but much better at interacting with the outside world. Build a distributed program in Elixir with Lisp-style macros, rich Ruby-like syntax, and the richness of the Erlang virtual machine. Build your own object layer in Lua, a statistical program in Julia, a proof in code with Idris, and a quiz game in Factor. When you're done, you'll have written programs in five different programming paradigms that were written on three different continents. You'll have explored four languages on the leading edge, invented in the past five years, and three more radically different languages, each with something significant to teach you.","language":"en","currency":"USD","id":"1680504746","title":"Seven More Languages in Seven Weeks","infoLink":"https:\/\/play.google.com\/store\/books\/details?id=ZA9QDwAAQBAJ&source=gbs_api","authors":["Bruce Tate","Ian Dees","Frederic Daoud","Jack Moffitt"]},{"pageCount":488,"thumbnail":"http:\/\/books.google.com\/books\/content?id=PgK1GbyiiDUC&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api","price":17.27,"subtitle":"The Definitive Guide","description":"Of all the Ajax-specific frameworks that have popped up in recent years, one clearly stands out as the industrial strength solution. Dojo is not just another JavaScript toolkit\u2014it's the JavaScript toolkit\u2014and Dojo: The Definitive Guide demonstrates how to tame Dojo's extensive library of utilities so that you can build rich and responsive web applications like never before. Dojo founder Alex Russell gives a foreword that explains the \"why\" of Dojo and of this book. Dojo provides an end-to-end solution for development in the browser, including everything from the core JavaScript library and turnkey widgets to build tools and a testing framework. Its vibrant open source community keeps adding to Dojo's arsenal, and this book provides an ideal companion to Dojo's official documentation. Dojo: the Definitive Guide gives you the most thorough overview of this toolkit available, showing you everything from how to create complex layouts and form controls closely resembling those found in the most advanced desktop applications with stock widgets, to advanced JavaScript idioms to AJAX and advanced communication transports. With this definitive reference you get: Get a concise introduction to Dojo that's good for all 1.x versions Well-explained examples, with scores of tested code samples, that let you see Dojo in action A comprehensive reference to Dojo's standard JavaScript library (including fundamental utilities in Base, Dojo's tiny but powerful kernel) that you'll wonder how you ever lived without An extensive look at additional Core features, such as animations, drag-and-drop, back-button handling, animations like wipe and slide, and more Exhaustive coverage of out-of-the-box Dijits (Dojo widgets) as well as definitive coverage on how to create your own, either from scratch or building on existing ones An itemized inventory of DojoX subprojects, the build tools, and the DOH, Dojo's unit-testing framework that you can use with Dojo\u2014or anywhere else If you're a DHTML-toting web developer, you need to read this book\u2014whether you're a one-person operation or part of an organization employing scores of developers. Dojo packs the standard JavaScript library you've always wanted, and Dojo: The Definitive Guide helps you transform your ideas into working applications quickly by leveraging design concepts you already know.","language":"en","currency":"USD","id":"059655172X","title":"Dojo: The Definitive Guide","infoLink":"https:\/\/play.google.com\/store\/books\/details?id=PgK1GbyiiDUC&source=gbs_api","authors":["Matthew A. Russell"]},{"pageCount":178,"thumbnail":"http:\/\/books.google.com\/books\/content?id=uqoiy8Qk4WsC&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api","price":7.99,"subtitle":"Extensible Markup Language","description":"XML, the Extensible Markup Language, is everywhere: the syntax of choice for newly designed document formats across almost all computer applications. Now used daily by developers, XML is living up to its reputation as one of the most important developments in document interchange in the history of computing. A perennial bestseller, the handy XML Pocket Reference from O'Reilly has been revised once again to give you quick access to the latest goods. In addition to its comprehensive look at XML, this third edition has been updated with new material on Namespaces and XML Schema--considered among the most important elements in current XML use--along with RELAX NG and Schematron, additional powerful tools for describing XML document structures. Like other titles in O'Reilly's Pocket Reference series, the XML Pocket Reference, 3rd Edition features a well-organized format that gets right to the point. As a result, it's already won over the allegiance of developers everywhere. If you need XML answers quick and on the fly, this compact book is most definitely the book for you.","language":"en","currency":"USD","id":"9781449379117","title":"XML Pocket Reference","infoLink":"https:\/\/play.google.com\/store\/books\/details?id=uqoiy8Qk4WsC&source=gbs_api","authors":["Simon St. Laurent","Michael Fitzgerald"]},{"pageCount":816,"thumbnail":"http:\/\/books.google.com\/books\/content?id=ZZ_6DwAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api","price":19.79,"subtitle":"A deep dive into distributed ledgers, consensus protocols, smart contracts, DApps, cryptocurrencies, Ethereum, and more, 3rd Edition","description":"Mastering Blockchain, Third Edition is the blockchain bible to equip you with extensive knowledge of distributed ledgers, cryptocurrencies, smart contracts, consensus algorithms, cryptography and blockchain platforms such as Ethereum, Bitcoin, and many more.","language":"en","currency":"USD","id":"1839211377","title":"Mastering Blockchain","infoLink":"https:\/\/play.google.com\/store\/books\/details?id=ZZ_6DwAAQBAJ&source=gbs_api","authors":["Imran Bashir"]},{"pageCount":304,"thumbnail":"http:\/\/books.google.com\/books\/content?id=prtSDwAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api","price":42.99,"subtitle":null,"description":"Drowning in unnecessary complexity, unmanaged state, and tangles of spaghetti code? In the best tradition of Lisp, Clojure gets out of your way so you can focus on expressing simple solutions to hard problems. Clojure cuts through complexity by providing a set of composable tools--immutable data, functions, macros, and the interactive REPL. Written by members of the Clojure core team, this book is the essential, definitive guide to Clojure. This new edition includes information on all the newest features of Clojure, such as transducers and specs. Clojure joins the flexibility and agility of Lisp with the reach, stability, and performance of Java. Combine Clojure's tools for maximum effectiveness as you work with immutable data, functional programming, and safe concurrency to write programs that solve real-world problems. Start by reading and understanding Clojure syntax and see how Clojure is evaluated. From there, find out about the sequence abstraction, which combines immutable collections with functional programming to create truly reusable data transformation code. Clojure is a functional language; learn how to write programs in a functional style, and when and how to use recursion to your advantage. Discover Clojure's unique approach to state and identity, techniques for polymorphism and open systems using multimethods and protocols, and how to leverage Clojure's metaprogramming capabilities via macros. Finally, put all the pieces together in a real program. New to this edition is coverage of Clojure's spec library, one of the most interesting new features of Clojure for describing both data and functions. You can use Clojure spec to validate data, destructure data, explain invalid data, and generate large numbers of tests to verify the correctness of your code. With this book, you'll learn how to think in Clojure, and how to take advantage of its combined strengths to build powerful programs quickly. What You Need: Java 6 or higher Clojure 1.9","language":"en","currency":"USD","id":"1680505726","title":"Programming Clojure","infoLink":"https:\/\/play.google.com\/store\/books\/details?id=prtSDwAAQBAJ&source=gbs_api","authors":["Alex Miller","Stuart Halloway","Aaron Bedra"]},{"pageCount":448,"thumbnail":"http:\/\/books.google.com\/books\/content?id=h7ThRRiEjX8C&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api","price":15.39,"subtitle":null,"description":"While most books written about Rails cater to programmers looking for information on data structures, Learning Rails targets web developers whose programming experience is tied directly to the Web. Rather than begin with the inner layers of a Rails web application--the models and controllers--this unique book approaches Rails development from the outer layer: the application interface. You'll learn how to create something visible with Rails before reaching the more difficult database models and controller code. With Learning Rails, you can start from the foundations of web design you already know, and then move more deeply into Ruby, objects, and database structures. This book will help you: Present web content by building an application with a basic view and a simple controller, while learning Ruby along the way Build forms and process their results, progressing from the simple to the more complex Connect forms to models by setting up a database, and use Rails' ActiveRecord to create code that maps to database structures Use Rails scaffolding to build applications from a view-centric perspective Add common web application elements such as sessions, cookies, and authentication Build applications that combine data from multiple tables Create simple but dynamic interfaces with Rails and Ajax Once you complete Learning Rails, you'll be comfortable working with the Rails web framework, and you'll be well on your way to becoming a Rails guru.","language":"en","currency":"USD","id":"0596554214","title":"Learning Rails","infoLink":"https:\/\/play.google.com\/store\/books\/details?id=h7ThRRiEjX8C&source=gbs_api","authors":["Simon St. Laurent","Edd Dumbill"]},{"pageCount":831,"thumbnail":"http:\/\/books.google.com\/books\/content?id=MgNmy8PIeyQC&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api","price":151.2,"subtitle":null,"description":"Handbook of Neuroevolution Through Erlang presents both the theory behind, and the methodology of, developing a neuroevolutionary-based computational intelligence system using Erlang. With a foreword written by Joe Armstrong, this handbook offers an extensive tutorial for creating a state of the art Topology and Weight Evolving Artificial Neural Network (TWEANN) platform. In a step-by-step format, the reader is guided from a single simulated neuron to a complete system. By following these steps, the reader will be able to use novel technology to build a TWEANN system, which can be applied to Artificial Life simulation, and Forex trading. Because of Erlang\u2019s architecture, it perfectly matches that of evolutionary and neurocomptational systems. As a programming language, it is a concurrent, message passing paradigm which allows the developers to make full use of the multi-core & multi-cpu systems. Handbook of Neuroevolution Through Erlang explains how to leverage Erlang\u2019s features in the field of machine learning, and the system\u2019s real world applications, ranging from algorithmic financial trading to artificial life and robotics.","language":"en","currency":"USD","id":"1461444632","title":"Handbook of Neuroevolution Through Erlang","infoLink":"https:\/\/play.google.com\/store\/books\/details?id=MgNmy8PIeyQC&source=gbs_api","authors":["Gene I. Sher"]},{"pageCount":400,"thumbnail":"http:\/\/books.google.com\/books\/content?id=SJHvCgAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api","price":17.27,"subtitle":null,"description":"The Go Programming Language is the authoritative resource for any programmer who wants to learn Go. It shows how to write clear and idiomatic Go to solve real-world problems. The book does not assume prior knowledge of Go nor experience with any specific language, so you\u2019ll find it accessible whether you\u2019re most comfortable with JavaScript, Ruby, Python, Java, or C++. The first chapter is a tutorial on the basic concepts of Go, introduced through programs for file I\/O and text processing, simple graphics, and web clients and servers. Early chapters cover the structural elements of Go programs: syntax, control flow, data types, and the organization of a program into packages, files, and functions. The examples illustrate many packages from the standard library and show how to create new ones of your own. Later chapters explain the package mechanism in more detail, and how to build, test, and maintain projects using the go tool. The chapters on methods and interfaces introduce Go\u2019s unconventional approach to object-oriented programming, in which methods can be declared on any type and interfaces are implicitly satisfied. They explain the key principles of encapsulation, composition, and substitutability using realistic examples. Two chapters on concurrency present in-depth approaches to this increasingly important topic. The first, which covers the basic mechanisms of goroutines and channels, illustrates the style known as communicating sequential processes for which Go is renowned. The second covers more traditional aspects of concurrency with shared variables. These chapters provide a solid foundation for programmers encountering concurrency for the first time. The final two chapters explore lower-level features of Go. One covers the art of metaprogramming using reflection. The other shows how to use the unsafe package to step outside the type system for special situations, and how to use the cgo tool to create Go bindings for C libraries. The book features hundreds of interesting and practical examples of well-written Go code that cover the whole language, its most important packages, and a wide range of applications. Each chapter has exercises to test your understanding and explore extensions and alternatives. Source code is freely available for download from http:\/\/gopl.io\/ and may be conveniently fetched, built, and installed using the go get command.","language":"en","currency":"USD","id":"0134190564","title":"The Go Programming Language","infoLink":"https:\/\/play.google.com\/store\/books\/details?id=SJHvCgAAQBAJ&source=gbs_api","authors":["Alan A. A. Donovan","Brian W. Kernighan"]},{"pageCount":608,"thumbnail":"http:\/\/books.google.com\/books\/content?id=Idi8DwAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api","price":12.64,"subtitle":"Learn to code in Python and kickstart your career in software development or data science","description":"More than just a Python guide for beginners, The Python Workshop takes you through the full spectrum of basic to advanced topics, equipping you with the skills you need to get started with data science and more. Filled with practical step-by-step examples and interactive exercises, you'll learn by doing as you grow your new Python skillset.","language":"en","currency":"USD","id":"1838984534","title":"The The Python Workshop","infoLink":"https:\/\/play.google.com\/store\/books\/details?id=Idi8DwAAQBAJ&source=gbs_api","authors":["Andrew Bird","Dr Lau Cher Han","Mario Corchero JimÃ©nez","Graham Lee","Corey Wade"]},{"pageCount":null,"thumbnail":"http:\/\/books.google.com\/books\/content?id=LhOlDwAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api","price":30.39,"subtitle":"your journey to mastery, 20th Anniversary Edition","description":"\u201COne of the most significant books in my life.\u201D \u2013Obie Fernandez, Author, The Rails Way \u201CTwenty years ago, the first edition of The Pragmatic Programmer completely changed the trajectory of my career. This new edition could do the same for yours.\u201D \u2013Mike Cohn, Author of Succeeding with Agile, Agile Estimating and Planning, and User Stories Applied \u201C. . . filled with practical advice, both technical and professional, that will serve you and your projects well for years to come.\u201D \u2013Andrea Goulet, CEO, Corgibytes, Founder, LegacyCode.Rocks \u201C. . . lightning does strike twice, and this book is proof.\u201D \u2013VM (Vicky) Brasseur, Director of Open Source Strategy, Juniper Networks The Pragmatic Programmer is one of those rare tech books you\u2019ll read, re-read, and read again over the years. Whether you\u2019re new to the field or an experienced practitioner, you\u2019ll come away with fresh insights each and every time. Dave Thomas and Andy Hunt wrote the first edition of this influential book in 1999 to help their clients create better software and rediscover the joy of coding. These lessons have helped a generation of programmers examine the very essence of software development, independent of any particular language, framework, or methodology, and the Pragmatic philosophy has spawned hundreds of books, screencasts, and audio books, as well as thousands of careers and success stories. Now, twenty years later, this new edition re-examines what it means to be a modern programmer. Topics range from personal responsibility and career development to architectural techniques for keeping your code flexible and easy to adapt and reuse. Read this book, and you\u2019ll learn how to: Fight software rot Learn continuously Avoid the trap of duplicating knowledge Write flexible, dynamic, and adaptable code Harness the power of basic tools Avoid programming by coincidence Learn real requirements Solve the underlying problems of concurrent code Guard against security vulnerabilities Build teams of Pragmatic Programmers Take responsibility for your work and career Test ruthlessly and effectively, including property-based testing Implement the Pragmatic Starter Kit Delight your users Written as a series of self-contained sections and filled with classic and fresh anecdotes, thoughtful examples, and interesting analogies, The Pragmatic Programmer illustrates the best approaches and major pitfalls of many different aspects of software development. Whether you\u2019re a new coder, an experienced programmer, or a manager responsible for software projects, use these lessons daily, and you\u2019ll quickly see improvements in personal productivity, accuracy, and job satisfaction. You\u2019ll learn skills and develop habits and attitudes that form the foundation for long-term success in your career. You\u2019ll become a Pragmatic Programmer. Register your book for convenient access to downloads, updates, and\/or corrections as they become available. See inside book for details.","language":"en","currency":"USD","id":"0135956919","title":"The Pragmatic Programmer","infoLink":"https:\/\/play.google.com\/store\/books\/details?id=LhOlDwAAQBAJ&source=gbs_api","authors":["David Thomas","Andrew Hunt"]},{"pageCount":300,"thumbnail":"http:\/\/books.google.com\/books\/content?id=459MDwAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api","price":14.17,"subtitle":"The History of Our Future","description":"Network revolutions of the past have shaped the present and set the stage for the revolution we are experiencing today In an era of seemingly instant change, it's easy to think that today's revolutions\u2014in communications, business, and many areas of daily life\u2014are unprecedented. Today's changes may be new and may be happening faster than ever before. But our ancestors at times were just as bewildered by rapid upheavals in what we now call \u201Cnetworks\u201D\u2014the physical links that bind any society together. In this fascinating book, former FCC chairman Tom Wheeler brings to life the two great network revolutions of the past and uses them to help put in perspective the confusion, uncertainty, and even excitement most people face today. The first big network revolution was the invention of movable-type printing in the fifteenth century. This book, its millions of predecessors, and even such broad trends as the Reformation, the Renaissance, and the multiple scientific revolutions of the past 500 years would not have been possible without that one invention. The second revolution came with the invention of the telegraph early in the nineteenth century. Never before had people been able to communicate over long distances faster than a horse could travel. Along with the development of the world's first high-speed network\u2014the railroad\u2014the telegraph upended centuries of stability and literally redrew the map of the world. Wheeler puts these past revolutions into the perspective of today, when rapid-fire changes in networking are upending the nature of work, personal privacy, education, the media, and nearly every other aspect of modern life. But he doesn't leave it there. Outlining \u201CWhat's Next,\u201D he describes how artificial intelligence, virtual reality, blockchain, and the need for cybersecurity are laying the foundation for a third network revolution.","language":"en","currency":"USD","id":"0815735332","title":"From Gutenberg to Google","infoLink":"https:\/\/play.google.com\/store\/books\/details?id=459MDwAAQBAJ&source=gbs_api","authors":["Tom Wheeler"]},{"pageCount":568,"thumbnail":"http:\/\/books.google.com\/books\/content?id=y83aDwAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api","price":28.49,"subtitle":"Build powerful and reliable Python web applications from scratch, 3rd Edition","description":"Learn Django 3 with four end-to-end web projects Key Features Learn Django 3 by building real-world web applications from scratch in Python, using coding best practices Integrate other technologies into your application with clear, step-by-step explanations and comprehensive example code Implement advanced functionalities like a full-text search engine, a user activity stream, or a recommendation engine Add real-time features with Django Channels and WebSockets Book Description If you want to learn the entire process of developing professional web applications with Python and Django, then this book is for you. In the process of building four professional Django projects, you will learn about Django 3 features, how to solve common web development problems, how to implement best practices, and how to successfully deploy your applications. In this book, you will build a blog application, a social image bookmarking website, an online shop, and an e-learning platform. Step-by-step guidance will teach you how to integrate popular technologies, enhance your applications with AJAX, create RESTful APIs, and set up a production environment for your Django projects. By the end of this book, you will have mastered Django 3 by building advanced web applications. What you will learn Build real-world web applications Learn Django essentials, including models, views, ORM, templates, URLs, forms, and authentication Implement advanced features such as custom model fields, custom template tags, cache, middleware, localization, and more Create complex functionalities, such as AJAX interactions, social authentication, a full-text search engine, a payment system, a CMS, a RESTful API, and more Integrate other technologies, including Redis, Celery, RabbitMQ, PostgreSQL, and Channels, into your projects Deploy Django projects in production using NGINX, uWSGI, and Daphne Who this book is for This book is intended for developers with Python knowledge who wish to learn Django in a pragmatic way. Perhaps you are completely new to Django, or you already know a little but you want to get the most out of it. This book will help you to master the most relevant areas of the framework by building practical projects from scratch. You need to have familiarity with programming concepts in order to read this book. Some previous knowledge of HTML and JavaScript is assumed.","language":"en","currency":"USD","id":"1838989323","title":"Django 3 By Example","infoLink":"https:\/\/play.google.com\/store\/books\/details?id=y83aDwAAQBAJ&source=gbs_api","authors":["Antonio MelÃ©"]},{"pageCount":320,"thumbnail":"http:\/\/books.google.com\/books\/content?id=ZA9QDwAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api","price":32.99,"subtitle":"Languages That Are Shaping the Future","description":"Great programmers aren't born--they're made. The industry is moving from object-oriented languages to functional languages, and you need to commit to radical improvement. New programming languages arm you with the tools and idioms you need to refine your craft. While other language primers take you through basic installation and \"Hello, World,\" we aim higher. Each language in Seven More Languages in Seven Weeks will take you on a step-by-step journey through the most important paradigms of our time. You'll learn seven exciting languages: Lua, Factor, Elixir, Elm, Julia, MiniKanren, and Idris. Learn from the award-winning programming series that inspired the Elixir language. Hear how other programmers across broadly different communities solve problems important enough to compel language development. Expand your perspective, and learn to solve multicore and distribution problems. In each language, you'll solve a non-trivial problem, using the techniques that make that language special. Write a fully functional game in Elm, without a single callback, that compiles to JavaScript so you can deploy it in any browser. Write a logic program in Clojure using a programming model, MiniKanren, that is as powerful as Prolog but much better at interacting with the outside world. Build a distributed program in Elixir with Lisp-style macros, rich Ruby-like syntax, and the richness of the Erlang virtual machine. Build your own object layer in Lua, a statistical program in Julia, a proof in code with Idris, and a quiz game in Factor. When you're done, you'll have written programs in five different programming paradigms that were written on three different continents. You'll have explored four languages on the leading edge, invented in the past five years, and three more radically different languages, each with something significant to teach you.","language":"en","currency":"USD","id":"1680504746","title":"Seven More Languages in Seven Weeks","infoLink":"https:\/\/play.google.com\/store\/books\/details?id=ZA9QDwAAQBAJ&source=gbs_api","authors":["Bruce Tate","Ian Dees","Frederic Daoud","Jack Moffitt"]},{"pageCount":488,"thumbnail":"http:\/\/books.google.com\/books\/content?id=PgK1GbyiiDUC&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api","price":17.27,"subtitle":"The Definitive Guide","description":"Of all the Ajax-specific frameworks that have popped up in recent years, one clearly stands out as the industrial strength solution. Dojo is not just another JavaScript toolkit\u2014it's the JavaScript toolkit\u2014and Dojo: The Definitive Guide demonstrates how to tame Dojo's extensive library of utilities so that you can build rich and responsive web applications like never before. Dojo founder Alex Russell gives a foreword that explains the \"why\" of Dojo and of this book. Dojo provides an end-to-end solution for development in the browser, including everything from the core JavaScript library and turnkey widgets to build tools and a testing framework. Its vibrant open source community keeps adding to Dojo's arsenal, and this book provides an ideal companion to Dojo's official documentation. Dojo: the Definitive Guide gives you the most thorough overview of this toolkit available, showing you everything from how to create complex layouts and form controls closely resembling those found in the most advanced desktop applications with stock widgets, to advanced JavaScript idioms to AJAX and advanced communication transports. With this definitive reference you get: Get a concise introduction to Dojo that's good for all 1.x versions Well-explained examples, with scores of tested code samples, that let you see Dojo in action A comprehensive reference to Dojo's standard JavaScript library (including fundamental utilities in Base, Dojo's tiny but powerful kernel) that you'll wonder how you ever lived without An extensive look at additional Core features, such as animations, drag-and-drop, back-button handling, animations like wipe and slide, and more Exhaustive coverage of out-of-the-box Dijits (Dojo widgets) as well as definitive coverage on how to create your own, either from scratch or building on existing ones An itemized inventory of DojoX subprojects, the build tools, and the DOH, Dojo's unit-testing framework that you can use with Dojo\u2014or anywhere else If you're a DHTML-toting web developer, you need to read this book\u2014whether you're a one-person operation or part of an organization employing scores of developers. Dojo packs the standard JavaScript library you've always wanted, and Dojo: The Definitive Guide helps you transform your ideas into working applications quickly by leveraging design concepts you already know.","language":"en","currency":"USD","id":"059655172X","title":"Dojo: The Definitive Guide","infoLink":"https:\/\/play.google.com\/store\/books\/details?id=PgK1GbyiiDUC&source=gbs_api","authors":["Matthew A. Russell"]},{"pageCount":178,"thumbnail":"http:\/\/books.google.com\/books\/content?id=uqoiy8Qk4WsC&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api","price":7.99,"subtitle":"Extensible Markup Language","description":"XML, the Extensible Markup Language, is everywhere: the syntax of choice for newly designed document formats across almost all computer applications. Now used daily by developers, XML is living up to its reputation as one of the most important developments in document interchange in the history of computing. A perennial bestseller, the handy XML Pocket Reference from O'Reilly has been revised once again to give you quick access to the latest goods. In addition to its comprehensive look at XML, this third edition has been updated with new material on Namespaces and XML Schema--considered among the most important elements in current XML use--along with RELAX NG and Schematron, additional powerful tools for describing XML document structures. Like other titles in O'Reilly's Pocket Reference series, the XML Pocket Reference, 3rd Edition features a well-organized format that gets right to the point. As a result, it's already won over the allegiance of developers everywhere. If you need XML answers quick and on the fly, this compact book is most definitely the book for you.","language":"en","currency":"USD","id":"9781449379117","title":"XML Pocket Reference","infoLink":"https:\/\/play.google.com\/store\/books\/details?id=uqoiy8Qk4WsC&source=gbs_api","authors":["Simon St. Laurent","Michael Fitzgerald"]},{"pageCount":816,"thumbnail":"http:\/\/books.google.com\/books\/content?id=ZZ_6DwAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api","price":19.79,"subtitle":"A deep dive into distributed ledgers, consensus protocols, smart contracts, DApps, cryptocurrencies, Ethereum, and more, 3rd Edition","description":"Mastering Blockchain, Third Edition is the blockchain bible to equip you with extensive knowledge of distributed ledgers, cryptocurrencies, smart contracts, consensus algorithms, cryptography and blockchain platforms such as Ethereum, Bitcoin, and many more.","language":"en","currency":"USD","id":"1839211377","title":"Mastering Blockchain","infoLink":"https:\/\/play.google.com\/store\/books\/details?id=ZZ_6DwAAQBAJ&source=gbs_api","authors":["Imran Bashir"]},{"pageCount":304,"thumbnail":"http:\/\/books.google.com\/books\/content?id=prtSDwAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api","price":42.99,"subtitle":null,"description":"Drowning in unnecessary complexity, unmanaged state, and tangles of spaghetti code? In the best tradition of Lisp, Clojure gets out of your way so you can focus on expressing simple solutions to hard problems. Clojure cuts through complexity by providing a set of composable tools--immutable data, functions, macros, and the interactive REPL. Written by members of the Clojure core team, this book is the essential, definitive guide to Clojure. This new edition includes information on all the newest features of Clojure, such as transducers and specs. Clojure joins the flexibility and agility of Lisp with the reach, stability, and performance of Java. Combine Clojure's tools for maximum effectiveness as you work with immutable data, functional programming, and safe concurrency to write programs that solve real-world problems. Start by reading and understanding Clojure syntax and see how Clojure is evaluated. From there, find out about the sequence abstraction, which combines immutable collections with functional programming to create truly reusable data transformation code. Clojure is a functional language; learn how to write programs in a functional style, and when and how to use recursion to your advantage. Discover Clojure's unique approach to state and identity, techniques for polymorphism and open systems using multimethods and protocols, and how to leverage Clojure's metaprogramming capabilities via macros. Finally, put all the pieces together in a real program. New to this edition is coverage of Clojure's spec library, one of the most interesting new features of Clojure for describing both data and functions. You can use Clojure spec to validate data, destructure data, explain invalid data, and generate large numbers of tests to verify the correctness of your code. With this book, you'll learn how to think in Clojure, and how to take advantage of its combined strengths to build powerful programs quickly. What You Need: Java 6 or higher Clojure 1.9","language":"en","currency":"USD","id":"1680505726","title":"Programming Clojure","infoLink":"https:\/\/play.google.com\/store\/books\/details?id=prtSDwAAQBAJ&source=gbs_api","authors":["Alex Miller","Stuart Halloway","Aaron Bedra"]},{"pageCount":448,"thumbnail":"http:\/\/books.google.com\/books\/content?id=h7ThRRiEjX8C&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api","price":15.39,"subtitle":null,"description":"While most books written about Rails cater to programmers looking for information on data structures, Learning Rails targets web developers whose programming experience is tied directly to the Web. Rather than begin with the inner layers of a Rails web application--the models and controllers--this unique book approaches Rails development from the outer layer: the application interface. You'll learn how to create something visible with Rails before reaching the more difficult database models and controller code. With Learning Rails, you can start from the foundations of web design you already know, and then move more deeply into Ruby, objects, and database structures. This book will help you: Present web content by building an application with a basic view and a simple controller, while learning Ruby along the way Build forms and process their results, progressing from the simple to the more complex Connect forms to models by setting up a database, and use Rails' ActiveRecord to create code that maps to database structures Use Rails scaffolding to build applications from a view-centric perspective Add common web application elements such as sessions, cookies, and authentication Build applications that combine data from multiple tables Create simple but dynamic interfaces with Rails and Ajax Once you complete Learning Rails, you'll be comfortable working with the Rails web framework, and you'll be well on your way to becoming a Rails guru.","language":"en","currency":"USD","id":"0596554214","title":"Learning Rails","infoLink":"https:\/\/play.google.com\/store\/books\/details?id=h7ThRRiEjX8C&source=gbs_api","authors":["Simon St. Laurent","Edd Dumbill"]},{"pageCount":831,"thumbnail":"http:\/\/books.google.com\/books\/content?id=MgNmy8PIeyQC&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api","price":151.2,"subtitle":null,"description":"Handbook of Neuroevolution Through Erlang presents both the theory behind, and the methodology of, developing a neuroevolutionary-based computational intelligence system using Erlang. With a foreword written by Joe Armstrong, this handbook offers an extensive tutorial for creating a state of the art Topology and Weight Evolving Artificial Neural Network (TWEANN) platform. In a step-by-step format, the reader is guided from a single simulated neuron to a complete system. By following these steps, the reader will be able to use novel technology to build a TWEANN system, which can be applied to Artificial Life simulation, and Forex trading. Because of Erlang\u2019s architecture, it perfectly matches that of evolutionary and neurocomptational systems. As a programming language, it is a concurrent, message passing paradigm which allows the developers to make full use of the multi-core & multi-cpu systems. Handbook of Neuroevolution Through Erlang explains how to leverage Erlang\u2019s features in the field of machine learning, and the system\u2019s real world applications, ranging from algorithmic financial trading to artificial life and robotics.","language":"en","currency":"USD","id":"1461444632","title":"Handbook of Neuroevolution Through Erlang","infoLink":"https:\/\/play.google.com\/store\/books\/details?id=MgNmy8PIeyQC&source=gbs_api","authors":["Gene I. Sher"]},{"pageCount":400,"thumbnail":"http:\/\/books.google.com\/books\/content?id=SJHvCgAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api","price":17.27,"subtitle":null,"description":"The Go Programming Language is the authoritative resource for any programmer who wants to learn Go. It shows how to write clear and idiomatic Go to solve real-world problems. The book does not assume prior knowledge of Go nor experience with any specific language, so you\u2019ll find it accessible whether you\u2019re most comfortable with JavaScript, Ruby, Python, Java, or C++. The first chapter is a tutorial on the basic concepts of Go, introduced through programs for file I\/O and text processing, simple graphics, and web clients and servers. Early chapters cover the structural elements of Go programs: syntax, control flow, data types, and the organization of a program into packages, files, and functions. The examples illustrate many packages from the standard library and show how to create new ones of your own. Later chapters explain the package mechanism in more detail, and how to build, test, and maintain projects using the go tool. The chapters on methods and interfaces introduce Go\u2019s unconventional approach to object-oriented programming, in which methods can be declared on any type and interfaces are implicitly satisfied. They explain the key principles of encapsulation, composition, and substitutability using realistic examples. Two chapters on concurrency present in-depth approaches to this increasingly important topic. The first, which covers the basic mechanisms of goroutines and channels, illustrates the style known as communicating sequential processes for which Go is renowned. The second covers more traditional aspects of concurrency with shared variables. These chapters provide a solid foundation for programmers encountering concurrency for the first time. The final two chapters explore lower-level features of Go. One covers the art of metaprogramming using reflection. The other shows how to use the unsafe package to step outside the type system for special situations, and how to use the cgo tool to create Go bindings for C libraries. The book features hundreds of interesting and practical examples of well-written Go code that cover the whole language, its most important packages, and a wide range of applications. Each chapter has exercises to test your understanding and explore extensions and alternatives. Source code is freely available for download from http:\/\/gopl.io\/ and may be conveniently fetched, built, and installed using the go get command.","language":"en","currency":"USD","id":"0134190564","title":"The Go Programming Language","infoLink":"https:\/\/play.google.com\/store\/books\/details?id=SJHvCgAAQBAJ&source=gbs_api","authors":["Alan A. A. Donovan","Brian W. Kernighan"]},{"pageCount":608,"thumbnail":"http:\/\/books.google.com\/books\/content?id=Idi8DwAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api","price":12.64,"subtitle":"Learn to code in Python and kickstart your career in software development or data science","description":"More than just a Python guide for beginners, The Python Workshop takes you through the full spectrum of basic to advanced topics, equipping you with the skills you need to get started with data science and more. Filled with practical step-by-step examples and interactive exercises, you'll learn by doing as you grow your new Python skillset.","language":"en","currency":"USD","id":"1838984534","title":"The The Python Workshop","infoLink":"https:\/\/play.google.com\/store\/books\/details?id=Idi8DwAAQBAJ&source=gbs_api","authors":["Andrew Bird","Dr Lau Cher Han","Mario Corchero JimÃ©nez","Graham Lee","Corey Wade"]}]